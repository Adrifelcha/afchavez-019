lines(c(0,16),c(14,0), col="black", lty=4, lwd=2)
#Correlación perfecta positiva
x <- c(2,4,6,8,10,12,14)
y <- rev(x)
plot(x,y, pch=15, cex=2, xlab="Prueba de felicidad", ylab="Prueba de depresión", cex.lab=1..5)
lines(c(0,16),c(14,0), col="black", lty=4, lwd=2)
#Correlación perfecta positiva
x <- c(2,4,6,8,10,12,14)
y <- rev(x)
plot(x,y, pch=15, cex=2, xlab="Prueba de felicidad", ylab="Prueba de depresión", cex.lab=1.5)
lines(c(0,16),c(14,0), col="black", lty=4, lwd=2)
#Correlación perfecta positiva
x <- c(2,4,6,8,10,12,14)
y <- rev(x)
plot(x,y, pch=15, cex=2, xlab="Prueba de felicidad", ylab="Prueba de depresión", cex.lab=1.5)
lines(c(2,14),c(14,0), col="black", lty=4, lwd=2)
#Correlación perfecta positiva
x <- c(2,4,6,8,10,12,14)
y <- rev(x)
plot(x,y, pch=15, cex=2, xlab="Prueba de felicidad", ylab="Prueba de depresión", cex.lab=1.5)
lines(c(2,14),c(14,2), col="black", lty=4, lwd=2)
##################################################
##################################################
# Clase de Modelos Politómicos en Psicometría
# impartida por el Dr. Ramsés V.L. y el Dr. Iwen
##################################################
# TAREA 1:
# Contraste entre Modelo de Crédito Parcial y
#                   el Modelo de Respuesta Graduada
###################################################
# Código por:
# Adriana Felisa Chávez De la Peña
#####################################################################################################################
#####################################################################################################################
# Instrucciones Generales:
# El archivo Tarea1 Datos.csv contiene datos de 1,500 sustentantes a un examen de matemáticas que consiste en 10 pre-
#guntas, donde cada pregunta vale hasta un máximo de 3 puntos. Los datos son las puntuaciones de cada sustentante en
#cada pregunta.
setwd("C:/Users/sandra/Desktop/afchavez-019/Clases RAM/Tarea MCP y MRG")
library("mirt")
Datos <- read.csv("Tarea1_Datos.csv")
#View(Datos)
Respuestas <- Datos[,c(2:ncol(Datos))]
Respuestas <- na.omit(Respuestas)
#View(Respuestas)
#####################################################################################################################
#####################################################################################################################
#####################################################################################################################
#####################################################################################################################
#####################################################################################################################
#####################################################################################################################
#####################################################################################################################
#####################################################################################################################
# 1: 1. Obtén estimaciones de los parámetros de los ítems para
# -> El modelo de crédito parcial generalizado (Muraki, 1992) ajustado a estos datos;
MCP <- mirt(data=Respuestas, model="Respuestas = 1-10", itemtype="Rasch", SE=TRUE, verbose=FALSE)
MCP_coef <- coef(MCP, IRTpars=TRUE, simplify=TRUE)
MCP_item_par <- as.data.frame(MCP_coef$items)
plot(MCP, type = 'trace', which.items = c(3,4,1,2),
main = "", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
# -> El modelo de respuesta graduada (Samejima, 1969) ajustado a estos mismos datos.
MRG <- mirt(data = Respuestas, model = "Respuestas = 1-10", itemtype = "graded", SE = TRUE)
MRG_params <- coef(MRG, IRTpars = TRUE, simplify = TRUE)
MRG_items <- as.data.frame(MRG_params$items)
MRG_items
plot(MRG, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2),
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
#Utiliza para ambos casos el método de máxima verosimilitud marginal con el supuesto de que los parámetros de las
#personas se han ext
##################################################
##################################################
# Clase de Modelos Politómicos en Psicometría
# impartida por el Dr. Ramsés V.L. y el Dr. Iwen
##################################################
# TAREA 1:
# Contraste entre Modelo de Crédito Parcial y
#                   el Modelo de Respuesta Graduada
###################################################
# Código por:
# Adriana Felisa Chávez De la Peña
#####################################################################################################################
#####################################################################################################################
# Instrucciones Generales:
# El archivo Tarea1 Datos.csv contiene datos de 1,500 sustentantes a un examen de matemáticas que consiste en 10 pre-
#guntas, donde cada pregunta vale hasta un máximo de 3 puntos. Los datos son las puntuaciones de cada sustentante en
#cada pregunta.
setwd("C:/Users/Alejandro/Desktop/afchavez19/Clases RAM/Tarea MCP y MRG")
library("mirt")
Datos <- read.csv("Tarea1_Datos.csv")
#View(Datos)
Respuestas <- Datos[,c(2:ncol(Datos))]
Respuestas <- na.omit(Respuestas)
#View(Respuestas)
#####################################################################################################################
#####################################################################################################################
#####################################################################################################################
#####################################################################################################################
#####################################################################################################################
#####################################################################################################################
#####################################################################################################################
#####################################################################################################################
# 1: 1. Obtén estimaciones de los parámetros de los ítems para
# -> El modelo de crédito parcial generalizado (Muraki, 1992) ajustado a estos datos;
MCP <- mirt(data=Respuestas, model="Respuestas = 1-10", itemtype="Rasch", SE=TRUE, verbose=FALSE)
MCP_coef <- coef(MCP, IRTpars=TRUE, simplify=TRUE)
MCP_item_par <- as.data.frame(MCP_coef$items)
plot(MCP, type = 'trace', which.items = c(3,4,1,2),
main = "", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
# -> El modelo de respuesta graduada (Samejima, 1969) ajustado a estos mismos datos.
MRG <- mirt(data = Respuestas, model = "Respuestas = 1-10", itemtype = "graded", SE = TRUE)
MRG_params <- coef(MRG, IRTpars = TRUE, simplify = TRUE)
MRG_items <- as.data.frame(MRG_params$items)
MRG_items
plot(MRG, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2),
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
#Utiliza para ambos casos el método de máxima verosimilitud marginal con el supuesto de que los parámetros de las
#personas se han ext
plot(c(MRG,MCP), type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2),
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
plot(MCP, type = 'trace', which.items = c(3,4,1,2),
main = "", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
# -> El modelo de respuesta graduada (Samejima, 1969) ajustado a estos mismos datos.
MRG <- mirt(data = Respuestas, model = "Respuestas = 1-10", itemtype = "graded", SE = TRUE)
MRG_params <- coef(MRG, IRTpars = TRUE, simplify = TRUE)
MRG_items <- as.data.frame(MRG_params$items)
MRG_items
plot(MRG, add=TRUE, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2),
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
plot(MCP, type = 'trace', which.items = c(3,4,1,2),
main = "", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
plot(MRG, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2),
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
plot(MCP, type = 'trace', which.items = c(1),
main = "", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
plot(MRG, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2),
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
plot(MCP, type = 'trace', which.items = c(1),
main = "", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
plot(MRG, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2),
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
MCP
plot(MCP, type = 'trace', which.items = c(1),
main = "", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
lines(MRG, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2),
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
source('C:/Users/Alejandro/Desktop/afchavez19/Clases RAM/Tarea MCP y MRG/Tarea_MCPvsMRG.R', echo=TRUE)
plot(MCP, type = 'trace', which.items = c(1),
main = "", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
lines(MRG, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2),
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
plot(MCP, type = 'trace', which.items = c(1),
main = "Hola", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
lines(MRG, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2), main="ALA"
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
plot(MCP, type = 'trace', which.items = c(1),
main = "Hola", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
plot(new=TRUE)
plot(MRG, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2), main="ALA"
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
plot(MCP, type = 'trace', which.items = c(1),
main = "Hola", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
plot(new=TRUE)
plot(MRG, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2), main="ALA",
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
plot(MCP, type = 'trace', which.items = c(1),
main = "Hola", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
plot(new=TRUE)
plot(MRG, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2), main="ALA",
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
plot(MCP, type = 'trace', which.items = c(1),
main = "Hola", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
#plot(new=TRUE)
lines(MRG, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2), main="ALA",
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
#Utiliza para ambos casos el método de máxima verosimilitud marginal con el supuesto de que los parámetros de las
plot(MCP, type = 'trace', which.items = c(1),
main = "Hola", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
#plot(new=TRUE)
lines(MRG, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2), main="ALA", add=TRUE,
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
#Utiliza para ambos casos el método de máxima verosimilitud marginal con el supuesto de que los parámetros de las
plot(MCP, type = 'trace', which.items = c(1),
main = "Hola", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
#plot(new=TRUE)
plot(MRG, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2), main="ALA", add=TRUE,
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
#Utiliza para ambos casos el método de máxima verosimilitud marginal con el supuesto de que los parámetros de las
plot(MCP, type = 'trace', which.items = c(1),
main = "Hola", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
#plot(new=TRUE)
plot(MRG, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2), main="ALA", add=TRUE,
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
#Utiliza para ambos casos el método de máxima verosimilitud marginal con el supuesto de que los parámetros de las
plot(MCP, type = 'trace', which.items = c(1),
main = "Hola", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
#plot(new=TRUE)
plot(MRG, add=TRUE, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2), main="ALA",
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
#Utiliza para ambos casos el método de máxima verosimilitud marginal con el supuesto de que los parámetros de las
plot(MCP, type = 'trace', which.items = c(1),
main = "Hola", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
par(new=TRUE)
plot(MRG, add=TRUE, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2), main="ALA",
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
#Utiliza para ambos casos el método de máxima verosimilitud marginal con el supuesto de que los parámetros de las
plot(MCP, type = 'trace', which.items = c(1),
main = "Hola", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
par(new=TRUE)
plot(MRG, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2), main="ALA",
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
#Utiliza para ambos casos el método de máxima verosimilitud marginal con el supuesto de que los parámetros de las
plot(MCP, type = 'trace', which.items = c(1),
main = "Hola", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
par(new=TRUE)
plot(MRG, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2), main="ALA",
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
#Utiliza para ambos casos el método de máxima verosimilitud marginal con el supuesto de que los parámetros de las
plot(MCP, type = 'trace', which.items = c(1),
main = "Hola", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
par(new=TRUE)
plot(MRG, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2), main="ALA",
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
#Utiliza para ambos casos el método de máxima verosimilitud marginal con el supuesto de que los parámetros de las
#personas se han extraído de una distribución normal con media 0 y varianza 1.
plot(MCP, type = 'trace', which.items = c(1),
main = "Hola")
par(new=TRUE)
plot(MRG, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2), main="ALA",
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
#Utiliza para ambos casos el método de máxima verosimilitud marginal con el supuesto de que los parámetros de las
#personas se han extraído de una distribución normal con media 0 y varianza 1.
plot(MCP, type = 'trace', which.items = c(1),
main = "Hola")
par(new=TRUE)
plot(MRG, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2), main="ALA",
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
#Utiliza para ambos casos el método de máxima verosimilitud marginal con el supuesto de que los parámetros de las
#personas se han extraído de una distribución normal con media 0 y varianza 1.
plot(MCP, type = 'trace', which.items = c(1),
main = "Hola")
par(new=TRUE)
plot(MRG, type = "trace", which.items = 1)
plot(MCP, type = 'trace', which.items = c(1),
main = "Hola")
#par(new=TRUE)
plot(MRG, add=TRUE, type = "trace", which.items = 1)
plot(MCP, type = 'trace', which.items = c(1),
main = "Hola")
#par(new=TRUE)
subplot(MRG, add=TRUE, type = "trace", which.items = 1)
subplot {Hmisc}
subplot()
plot(MCP, type = 'trace', which.items = c(1),
main = "Hola")
#par(new=TRUE)
subplot(MRG, add=TRUE, type = "trace", which.items = 1)
#cada pregunta.
setwd("C:/Users/Alejandro/Desktop/afchavez19/Clases RAM/Tarea MCP y MRG")
library("mirt")
library("ggplot2")
Datos <- read.csv("Tarea1_Datos.csv")
#View(Datos)
Respuestas <- Datos[,c(2:ncol(Datos))]
Respuestas <- na.omit(Respuestas)
#View(Respuestas)
#####################################################################################################################
#####################################################################################################################
#####################################################################################################################
##############
plot(MCP, type = 'trace', which.items = c(1),
main = "Hola")
#par(new=TRUE)
subplot(MRG, add=TRUE, type = "trace", which.items = 1)
#Utiliza para ambos casos el método de máxima verosimilitud marginal con el supuesto de que los parámetros de las
#personas se han extraído de una distribución normal con media 0 y varianza 1.
##################
plot(MCP, type = 'trace', which.items = c(1),
main = "Hola")
#par(new=TRUE)
subplot(MRG, add=TRUE, type = "trace", which.items = 1)
#Utiliza para ambos casos el método de máxima verosimilitud marginal con el supuesto de que los parámetros de las
#personas se han extraído de una distribución normal con media 0 y varianza 1.
##################
# make an original plot
plot( 11:20, sample(51:60) )
# add some histograms
subplot( hist(rnorm(100)), 15, 55)
subplot( hist(runif(100),main='',xlab='',ylab=''), 11, 51, hadj=0, vadj=0)
subplot( hist(rexp(100, 1/3)), 20, 60, hadj=1, vadj=1, size=c(0.5,2) )
subplot( hist(rt(100,3)), c(12,16), c(57,59), pars=list(lwd=3,ask=FALSE) )
install.packages("plotly")
plot(MCP, type = 'trace', which.items = c(1),
main = "Hola")
#par(new=TRUE)
subplot(MRG, add=TRUE, type = "trace", which.items = 1)
#Utiliza para ambos casos el método de máxima verosimilitud marginal con el supuesto de que los parámetros de las
#personas se han extraído de una distribución normal con media 0 y varianza 1.
##################
plot(MCP, type = 'trace', which.items = c(1),
main = "Hola")
#par(new=TRUE)
#par(fig = c(grconvertX(c(1, 3), from="user", to="ndc"),
#            grconvertY(c(50, 125), from="user", to="ndc")),
#    mar = c(4,6,1,1),
#    new = TRUE)
par(fig= c(plot(MRG, add=TRUE, type = "trace", which.items = 1)),
mar = c(4,5,1,1),
new=TRUE)
matplot(x, cbind(MCP,MRG), type = 'trace', which.items = c(3,4,1,2),
main = "", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
matplot(x, cbind(MCP,MRG), type = 'trace', which.items = c(3,4,1,2),
main = "", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
matplot(c(-3:3), cbind(MCP,MRG), type = 'trace', which.items = c(3,4,1,2),
main = "", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
matplot(cbind(MCP,MRG), type = 'trace', which.items = c(3,4,1,2),
main = "", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
matplot(cbind(MCP,MRG), type = 'trace', which.items = c(3,4,1,2),
main = "", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
matplot(cbind(MCP,MRG), type = 'trace', which.items = c(3,4,1,2),
main = "", auto.key=list(points=FALSE,lines=TRUE, columns=4))
matplot(cbind(MCP,MRG), type = 'trace', which.items = c(3,4,1,2),
main = "", auto.key=list(points=FALSE,lines=TRUE, columns=4))
plot(MRG, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2),
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
plot(MRG, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2),
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
plot(MCP, type = 'trace', which.items = c(3,4,1,2),
main = "", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
plot(MRG, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2),
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
plot(MCP, type = 'trace', which.items = c(3,4,1,2),
main = "", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
##################################################
##################################################
# Clase de Modelos Politómicos en Psicometría
# impartida por el Dr. Ramsés V.L. y el Dr. Iwen
##################################################
# TAREA 1:
# Contraste entre Modelo de Crédito Parcial y
#                   el Modelo de Respuesta Graduada
###################################################
# Código por:
# Adriana Felisa Chávez De la Peña
#####################################################################################################################
#####################################################################################################################
# Instrucciones Generales:
# El archivo Tarea1 Datos.csv contiene datos de 1,500 sustentantes a un examen de matemáticas que consiste en 10 pre-
#guntas, donde cada pregunta vale hasta un máximo de 3 puntos. Los datos son las puntuaciones de cada sustentante en
#cada pregunta.
setwd("C:/Users/Alejandro/Desktop/afchavez19/Clases RAM/Tarea MCP y MRG")
library("mirt")
library("ggplot2")
Datos <- read.csv("Tarea1_Datos.csv")
#View(Datos)
Respuestas <- Datos[,c(2:ncol(Datos))]
Respuestas <- na.omit(Respuestas)
#View(Respuestas)
#####################################################################################################################
#####################################################################################################################
#####################################################################################################################
#####################################################################################################################
#####################################################################################################################
#####################################################################################################################
#####################################################################################################################
#####################################################################################################################
# 1: 1. Obtén estimaciones de los parámetros de los ítems para
# -> El modelo de crédito parcial generalizado (Muraki, 1992) ajustado a estos datos;
MCP <- mirt(data=Respuestas, model="Respuestas = 1-10", itemtype="Rasch", SE=TRUE, verbose=FALSE)
MCP_coef <- coef(MCP, IRTpars=TRUE, simplify=TRUE)
MCP_item_par <- as.data.frame(MCP_coef$items)
plot(MCP, type = 'trace', which.items = c(3,4,1,2),
main = "", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
# -> El modelo de respuesta graduada (Samejima, 1969) ajustado a estos mismos datos.
MRG <- mirt(data = Respuestas, model = "Respuestas = 1-10", itemtype = "graded", SE = TRUE)
MRG_params <- coef(MRG, IRTpars = TRUE, simplify = TRUE)
MRG_items <- as.data.frame(MRG_params$items)
MRG_items
plot(MRG, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2),
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
plot(MCP, type = 'trace', which.items = c(1),
main = "Hola")
#par(new=TRUE)
#par(fig = c(grconvertX(c(1, 3), from="user", to="ndc"),
#            grconvertY(c(50, 125), from="user", to="ndc")),
#    mar = c(4,6,1,1),
#    new = TRUE)
par(fig= c(plot(MRG, add=TRUE, type = "trace", which.items = 1)),
mar = c(4,5,1,1),
new=TRUE)
plot(MRG, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2),
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
plot(MCP, type = 'trace', which.items = c(3,4,1,2),
main = "", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
##################################################
##################################################
# Clase de Modelos Politómicos en Psicometría
# impartida por el Dr. Ramsés V.L. y el Dr. Iwen
##################################################
# TAREA 1:
# Contraste entre Modelo de Crédito Parcial y
#                   el Modelo de Respuesta Graduada
###################################################
# Código por:
# Adriana Felisa Chávez De la Peña
#####################################################################################################################
#####################################################################################################################
# Instrucciones Generales:
# El archivo Tarea1 Datos.csv contiene datos de 1,500 sustentantes a un examen de matemáticas que consiste en 10 pre-
#guntas, donde cada pregunta vale hasta un máximo de 3 puntos. Los datos son las puntuaciones de cada sustentante en
#cada pregunta.
setwd("C:/Users/Alejandro/Desktop/afchavez19/Clases RAM/Tarea MCP y MRG")
library("mirt")
library("ggplot2")
Datos <- read.csv("Tarea1_Datos.csv")
#View(Datos)
Respuestas <- Datos[,c(2:ncol(Datos))]
Respuestas <- na.omit(Respuestas)
#View(Respuestas)
#####################################################################################################################
#####################################################################################################################
#####################################################################################################################
#####################################################################################################################
#####################################################################################################################
#####################################################################################################################
#####################################################################################################################
#####################################################################################################################
# 1: 1. Obtén estimaciones de los parámetros de los ítems para
# -> El modelo de crédito parcial generalizado (Muraki, 1992) ajustado a estos datos;
MCP <- mirt(data=Respuestas, model="Respuestas = 1-10", itemtype="Rasch", SE=TRUE, verbose=FALSE)
MCP_coef <- coef(MCP, IRTpars=TRUE, simplify=TRUE)
MCP_item_par <- as.data.frame(MCP_coef$items)
plot(MCP, type = 'trace', which.items = c(3,4,1,2),
main = "", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
# -> El modelo de respuesta graduada (Samejima, 1969) ajustado a estos mismos datos.
MRG <- mirt(data = Respuestas, model = "Respuestas = 1-10", itemtype = "graded", SE = TRUE)
MRG_params <- coef(MRG, IRTpars = TRUE, simplify = TRUE)
MRG_items <- as.data.frame(MRG_params$items)
MRG_items
plot(MRG, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2),
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
plot(MCP, type = 'trace', which.items = c(1),
main = "Hola")
#par(new=TRUE)
#par(fig = c(grconvertX(c(1, 3), from="user", to="ndc"),
#            grconvertY(c(50, 125), from="user", to="ndc")),
#    mar = c(4,6,1,1),
#    new = TRUE)
par(fig= c(plot(MRG, add=TRUE, type = "trace", which.items = 1)),
mar = c(4,5,1,1),
new=TRUE)
matplot(cbind(MRG,MCP), type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2),
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
plot(MRG, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2),
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
plot(MCP, type = 'trace', which.items = c(3,4,1,2),
main = "", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
plot(MRG, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2),
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
plot(MCP, type = 'trace', which.items = c(3,4,1,2),
main = "", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
plot(MRG, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2),
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
plot(MCP, type = 'trace', which.items = 1),
main = "", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
matplot(cbind(MRG,MCP), type = "trace", which.items = 1)
plot(MRG, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2),
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
plot(MCP, type = 'trace', which.items = 1,
main = "", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
#Utiliza para ambos casos el método de máxima verosimilitud marginal con
plot(MRG, type = "trace", which.items = 1, par.settings = simpleTheme(lty = 1:4, lwd = 2),
auto.key = list(points = FALSE, lines = TRUE, columns = 4))
plot(MCP, type = 'trace', which.items = 1,
main = "", par.settings = simpleTheme(lty=1:4,lwd=2),
auto.key=list(points=FALSE,lines=TRUE, columns=4))
library(eRm)
install.packages("eRm")
