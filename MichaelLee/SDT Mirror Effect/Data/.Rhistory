##############################################################
##############################################################
#Diferencias en Hits y Falsas Alarmas
#Modelo 1 :  Diferencias entre las Tasas H y FA (parametros TauH y TauF)
#            contra datos generados usando las priors
##############################################################
######################################################
#Especificamos el Experimento y los Datos a analizar
experimento <- 1
###################
if (experimento == 1)    #Una Figura de Ebbinghaus
{
exp <- 1
archive <-'Ex_1Ebb_TODOS.csv'         #El archivo que contiene los datos
datos <- read.csv(archive)          #Jalamos los datos del archivo
}
if (experimento == 2)   # Dos Figuras de Ebbinghaus
{
exp <- 2
archive <-'Ex_2Ebb_TODOS_Sin1.csv'  #El archivo que contiene los datos
datos <- read.csv(archive)          #Jalamos los datos
}
h_A <- datos$A_H       #Hits(A)
h_B <- datos$B_H     #Hits(B)
fa_A <- datos$A_FA        #FA(A)
fa_B <- datos$B_FA      #FA(B)
k <- 20                       #Participantes
s <- 160       #Ensayos con Señal
n <- 160       #Ensayos con Ruido
############################################################################
############################################################################
#Escribimos el modelo Inicial
############################################################################
write('
model{
#Posterior estimations (based on the data collected)
for (i in 1:k){
# Posterior density based on our data
h_A[i] ~ dbin(thetah_A[i],s)
fa_A[i] ~ dbin(thetaf_A[i],n)
h_B[i] ~ dbin(thetah_B[i],s)
fa_B[i] ~ dbin(thetaf_B[i],n)
# Reparameterization Using Equal-Variance Gaussian SDT
thetah_A[i] <- realH[i] + deltaH[i]/2
thetaf_A[i] <- realF[i] - deltaF[i]/2
thetah_B[i] <- realH[i] - deltaH[i]/2
thetaf_B[i] <- realF[i] + deltaF[i]/2
realH[i] ~ dbeta(1,1)T(0,0.5)
realF[i] ~ dbeta(1,1)T(0,0.5)
deltaH[i] ~ dnorm(muH,sdH)
deltaF[i] ~ dnorm(muF,sdF)
}
muH ~ dbeta(1,1)T(0.5,1)
muF ~ dbeta(1,1)T(0,0.5)
sdH ~ dbeta(1,1)T(0.001,.25)
sdF ~ dbeta(1,1)T(0.001,.25)
}','Delta-Rate.bug')
######################################
######################################
# Definimos los elementos de trabajo
######################################
data <- list("fa_A", "fa_B", "h_B", "h_A", "s", "n", "k")                    #Los datos que vamos a utilizar para nuestro modelo
myinits <- list(
list(deltaH = 0.75, deltaF = 0.25, muH = 0.75,muF = 0.25))      #Valores iniciales para las extracciones de las cadenas de Markov
#Parámetros monitoreados
parameters <- c("thetah_A", "thetaf_A", "thetah_B", "thetaf_B",
"Pr_thetah_A", "Pr_thetaf_A", "Pr_thetah_B", "Pr_thetaf_B",
"muHA","muHB","muFA","muFB",
"Pr_muHA","Pr_muHB","Pr_muFA","Pr_muFB",
"deltaH","deltaF",
"Pr_deltaH","Pr_deltaF",
"muH", "muF",
"Pr_muH", "Pr_muF",
"Pr_h_A", " Pr_h_B", " Pr_fa_A", " Pr_fa_B")
niter <- 50000    #Iteraciones
burnin <- 5000     #No. de primeros sampleos en ignorarse
#Corremos el modelo
samples <- jags(data, inits=myinits, parameters,
model.file ="Delta-Rate.bug",
n.chains=1, n.iter=niter, n.burnin=burnin, n.thin=1)
####################################################################
# Jalamos los resultados d
setwd("C:/Users/Alejandro/Desktop/afchavez19/MichaelLee/SDT Mirror Effect/Data")
rm(list=ls())
dir()
library(R2jags)
##############################################################
##############################################################
#Diferencias en Hits y Falsas Alarmas
#Modelo 1 :  Diferencias entre las Tasas H y FA (parametros TauH y TauF)
#            contra datos generados usando las priors
##############################################################
######################################################
#Especificamos el Experimento y los Datos a analizar
experimento <- 1
###################
if (experimento == 1)    #Una Figura de Ebbinghaus
{
exp <- 1
archive <-'Ex_1Ebb_TODOS.csv'         #El archivo que contiene los datos
datos <- read.csv(archive)          #Jalamos los datos del archivo
}
if (experimento == 2)   # Dos Figuras de Ebbinghaus
{
exp <- 2
archive <-'Ex_2Ebb_TODOS_Sin1.csv'  #El archivo que contiene los datos
datos <- read.csv(archive)          #Jalamos los datos
}
h_A <- datos$A_H       #Hits(A)
h_B <- datos$B_H     #Hits(B)
fa_A <- datos$A_FA        #FA(A)
fa_B <- datos$B_FA      #FA(B)
k <- 20                       #Participantes
s <- 160       #Ensayos con Señal
n <- 160       #Ensayos con Ruido
############################################################################
############################################################################
#Escribimos el modelo Inicial
############################################################################
write('
model{
#Posterior estimations (based on the data collected)
for (i in 1:k){
# Posterior density based on our data
h_A[i] ~ dbin(thetah_A[i],s)
fa_A[i] ~ dbin(thetaf_A[i],n)
h_B[i] ~ dbin(thetah_B[i],s)
fa_B[i] ~ dbin(thetaf_B[i],n)
# Reparameterization Using Equal-Variance Gaussian SDT
thetah_A[i] <- realH[i] + deltaH[i]/2
thetaf_A[i] <- realF[i] - deltaF[i]/2
thetah_B[i] <- realH[i] - deltaH[i]/2
thetaf_B[i] <- realF[i] + deltaF[i]/2
realH[i] ~ dbeta(1,1)T(0,0.5)
realF[i] ~ dbeta(1,1)T(0,0.5)
deltaH[i] ~ dnorm(muH,sdH)
deltaF[i] ~ dnorm(muF,sdF)
}
muH ~ dbeta(1,1)T(0.5,1)
muF ~ dbeta(1,1)T(0,0.5)
sdH ~ dbeta(1,1)T(0.001,.25)
sdF ~ dbeta(1,1)T(0.001,.25)
}','Delta-Rate.bug')
######################################
######################################
# Definimos los elementos de trabajo
######################################
data <- list("fa_A", "fa_B", "h_B", "h_A", "s", "n", "k")                    #Los datos que vamos a utilizar para nuestro modelo
myinits <- list(
list(deltaH = 0.75, deltaF = 0.2, muH = 0.75,muF = 0.25))      #Valores iniciales para las extracciones de las cadenas de Markov
#Parámetros monitoreados
parameters <- c("thetah_A", "thetaf_A", "thetah_B", "thetaf_B",
"Pr_thetah_A", "Pr_thetaf_A", "Pr_thetah_B", "Pr_thetaf_B",
"muHA","muHB","muFA","muFB",
"Pr_muHA","Pr_muHB","Pr_muFA","Pr_muFB",
"deltaH","deltaF",
"Pr_deltaH","Pr_deltaF",
"muH", "muF",
"Pr_muH", "Pr_muF",
"Pr_h_A", " Pr_h_B", " Pr_fa_A", " Pr_fa_B")
niter <- 50000    #Iteraciones
burnin <- 5000     #No. de primeros sampleos en ignorarse
#Corremos el modelo
samples <- jags(data, inits=myinits, parameters,
model.file ="Delta-Rate.bug",
n.chains=1, n.iter=niter, n.burnin=burnin, n.thin=1)
####################################################################
# Jalamos los resultados d
setwd("C:/Users/Alejandro/Desktop/afchavez19/MichaelLee/SDT Mirror Effect/Data")
rm(list=ls())
dir()
library(R2jags)
##############################################################
##############################################################
#Diferencias en Hits y Falsas Alarmas
#Modelo 1 :  Diferencias entre las Tasas H y FA (parametros TauH y TauF)
#            contra datos generados usando las priors
##############################################################
######################################################
#Especificamos el Experimento y los Datos a analizar
experimento <- 1
###################
if (experimento == 1)    #Una Figura de Ebbinghaus
{
exp <- 1
archive <-'Ex_1Ebb_TODOS.csv'         #El archivo que contiene los datos
datos <- read.csv(archive)          #Jalamos los datos del archivo
}
if (experimento == 2)   # Dos Figuras de Ebbinghaus
{
exp <- 2
archive <-'Ex_2Ebb_TODOS_Sin1.csv'  #El archivo que contiene los datos
datos <- read.csv(archive)          #Jalamos los datos
}
h_A <- datos$A_H       #Hits(A)
h_B <- datos$B_H     #Hits(B)
fa_A <- datos$A_FA        #FA(A)
fa_B <- datos$B_FA      #FA(B)
k <- 20                       #Participantes
s <- 160       #Ensayos con Señal
n <- 160       #Ensayos con Ruido
############################################################################
############################################################################
#Escribimos el modelo Inicial
############################################################################
write('
model{
#Posterior estimations (based on the data collected)
for (i in 1:k){
# Posterior density based on our data
h_A[i] ~ dbin(thetah_A[i],s)
fa_A[i] ~ dbin(thetaf_A[i],n)
h_B[i] ~ dbin(thetah_B[i],s)
fa_B[i] ~ dbin(thetaf_B[i],n)
# Reparameterization Using Equal-Variance Gaussian SDT
thetah_A[i] <- realH[i] + deltaH[i]/2
thetaf_A[i] <- realF[i] - deltaF[i]/2
thetah_B[i] <- realH[i] - deltaH[i]/2
thetaf_B[i] <- realF[i] + deltaF[i]/2
realH[i] ~ dbeta(1,1)T(0,0.5)
realF[i] ~ dbeta(1,1)T(0,0.5)
deltaH[i] ~ dnorm(muH,sdH)
deltaF[i] ~ dnorm(muF,sdF)
}
muH ~ dbeta(1,1)T(0.5,1)
muF ~ dbeta(1,1)T(0,0.5)
sdH ~ dbeta(1,1)T(0.001,.25)
sdF ~ dbeta(1,1)T(0.001,.25)
}','Delta-Rate.bug')
######################################
######################################
# Definimos los elementos de trabajo
######################################
data <- list("fa_A", "fa_B", "h_B", "h_A", "s", "n", "k")                    #Los datos que vamos a utilizar para nuestro modelo
myinits <- list(
list(deltaH = 0.75, deltaF = 0, muH = 0.75,muF = 0.25))      #Valores iniciales para las extracciones de las cadenas de Markov
#Parámetros monitoreados
parameters <- c("thetah_A", "thetaf_A", "thetah_B", "thetaf_B",
"Pr_thetah_A", "Pr_thetaf_A", "Pr_thetah_B", "Pr_thetaf_B",
"muHA","muHB","muFA","muFB",
"Pr_muHA","Pr_muHB","Pr_muFA","Pr_muFB",
"deltaH","deltaF",
"Pr_deltaH","Pr_deltaF",
"muH", "muF",
"Pr_muH", "Pr_muF",
"Pr_h_A", " Pr_h_B", " Pr_fa_A", " Pr_fa_B")
niter <- 50000    #Iteraciones
burnin <- 5000     #No. de primeros sampleos en ignorarse
#Corremos el modelo
samples <- jags(data, inits=myinits, parameters,
model.file ="Delta-Rate.bug",
n.chains=1, n.iter=niter, n.burnin=burnin, n.thin=1)
####################################################################
# Jalamos los resultados d
setwd("C:/Users/Alejandro/Desktop/afchavez19/MichaelLee/SDT Mirror Effect/Data")
rm(list=ls())
dir()
library(R2jags)
##############################################################
##############################################################
#Diferencias en Hits y Falsas Alarmas
#Modelo 1 :  Diferencias entre las Tasas H y FA (parametros TauH y TauF)
#            contra datos generados usando las priors
##############################################################
######################################################
#Especificamos el Experimento y los Datos a analizar
experimento <- 1
###################
if (experimento == 1)    #Una Figura de Ebbinghaus
{
exp <- 1
archive <-'Ex_1Ebb_TODOS.csv'         #El archivo que contiene los datos
datos <- read.csv(archive)          #Jalamos los datos del archivo
}
if (experimento == 2)   # Dos Figuras de Ebbinghaus
{
exp <- 2
archive <-'Ex_2Ebb_TODOS_Sin1.csv'  #El archivo que contiene los datos
datos <- read.csv(archive)          #Jalamos los datos
}
h_A <- datos$A_H       #Hits(A)
h_B <- datos$B_H     #Hits(B)
fa_A <- datos$A_FA        #FA(A)
fa_B <- datos$B_FA      #FA(B)
k <- 20                       #Participantes
s <- 160       #Ensayos con Señal
n <- 160       #Ensayos con Ruido
############################################################################
############################################################################
#Escribimos el modelo Inicial
############################################################################
write('
model{
#Posterior estimations (based on the data collected)
for (i in 1:k){
# Posterior density based on our data
h_A[i] ~ dbin(thetah_A[i],s)
fa_A[i] ~ dbin(thetaf_A[i],n)
h_B[i] ~ dbin(thetah_B[i],s)
fa_B[i] ~ dbin(thetaf_B[i],n)
# Reparameterization Using Equal-Variance Gaussian SDT
thetah_A[i] <- realH[i] + deltaH[i]/2
thetaf_A[i] <- realF[i] - deltaF[i]/2
thetah_B[i] <- realH[i] - deltaH[i]/2
thetaf_B[i] <- realF[i] + deltaF[i]/2
realH[i] ~ dbeta(1,1)T(0,0.5)
realF[i] ~ dbeta(1,1)T(0,0.5)
deltaH[i] ~ dnorm(muH,sdH)
deltaF[i] ~ dnorm(muF,sdF)
}
muH ~ dbeta(1,1)T(0.5,1)
muF ~ dbeta(1,1)T(0,0.5)
sdH ~ dbeta(1,1)T(0.001,.25)
sdF ~ dbeta(1,1)T(0.001,.25)
}','Delta-Rate.bug')
######################################
######################################
# Definimos los elementos de trabajo
######################################
data <- list("fa_A", "fa_B", "h_B", "h_A", "s", "n", "k")                    #Los datos que vamos a utilizar para nuestro modelo
myinits <- list(
list(deltaH = 0.75, deltaF = .5, muH = 0.75,muF = 0.25))      #Valores iniciales para las extracciones de las cadenas de Markov
#Parámetros monitoreados
parameters <- c("thetah_A", "thetaf_A", "thetah_B", "thetaf_B",
"Pr_thetah_A", "Pr_thetaf_A", "Pr_thetah_B", "Pr_thetaf_B",
"muHA","muHB","muFA","muFB",
"Pr_muHA","Pr_muHB","Pr_muFA","Pr_muFB",
"deltaH","deltaF",
"Pr_deltaH","Pr_deltaF",
"muH", "muF",
"Pr_muH", "Pr_muF",
"Pr_h_A", " Pr_h_B", " Pr_fa_A", " Pr_fa_B")
niter <- 50000    #Iteraciones
burnin <- 5000     #No. de primeros sampleos en ignorarse
#Corremos el modelo
samples <- jags(data, inits=myinits, parameters,
model.file ="Delta-Rate.bug",
n.chains=1, n.iter=niter, n.burnin=burnin, n.thin=1)
####################################################################
# Jalamos los resultados d
setwd("C:/Users/Alejandro/Desktop/afchavez19/MichaelLee/SDT Mirror Effect/Data")
rm(list=ls())
dir()
library(R2jags)
##############################################################
##############################################################
#Diferencias en Hits y Falsas Alarmas
#Modelo 1 :  Diferencias entre las Tasas H y FA (parametros TauH y TauF)
#            contra datos generados usando las priors
##############################################################
######################################################
#Especificamos el Experimento y los Datos a analizar
experimento <- 1
###################
if (experimento == 1)    #Una Figura de Ebbinghaus
{
exp <- 1
archive <-'Ex_1Ebb_TODOS.csv'         #El archivo que contiene los datos
datos <- read.csv(archive)          #Jalamos los datos del archivo
}
if (experimento == 2)   # Dos Figuras de Ebbinghaus
{
exp <- 2
archive <-'Ex_2Ebb_TODOS_Sin1.csv'  #El archivo que contiene los datos
datos <- read.csv(archive)          #Jalamos los datos
}
h_A <- datos$A_H       #Hits(A)
h_B <- datos$B_H     #Hits(B)
fa_A <- datos$A_FA        #FA(A)
fa_B <- datos$B_FA      #FA(B)
k <- 20                       #Participantes
s <- 160       #Ensayos con Señal
n <- 160       #Ensayos con Ruido
############################################################################
############################################################################
#Escribimos el modelo Inicial
############################################################################
write('
model{
#Posterior estimations (based on the data collected)
for (i in 1:k){
# Posterior density based on our data
h_A[i] ~ dbin(thetah_A[i],s)
fa_A[i] ~ dbin(thetaf_A[i],n)
h_B[i] ~ dbin(thetah_B[i],s)
fa_B[i] ~ dbin(thetaf_B[i],n)
# Reparameterization Using Equal-Variance Gaussian SDT
thetah_A[i] <- realH[i] + deltaH[i]/2
thetaf_A[i] <- realF[i] - deltaF[i]/2
thetah_B[i] <- realH[i] - deltaH[i]/2
thetaf_B[i] <- realF[i] + deltaF[i]/2
realH[i] ~ dbeta(1,1)T(0,0.5)
realF[i] ~ dbeta(1,1)T(0,0.5)
deltaH[i] ~ dnorm(muH,sdH)
deltaF[i] ~ dnorm(muF,sdF)
}
muH ~ dbeta(1,1)T(0.5,1)
muF ~ dbeta(1,1)T(0,0.5)
sdH ~ dbeta(1,1)T(0.001,.25)
sdF ~ dbeta(1,1)T(0.001,.25)
}','Delta-Rate.bug')
######################################
######################################
# Definimos los elementos de trabajo
######################################
data <- list("fa_A", "fa_B", "h_B", "h_A", "s", "n", "k")                    #Los datos que vamos a utilizar para nuestro modelo
myinits <- list(
list(muH = 0.75,muF = 0.25))      #Valores iniciales para las extracciones de las cadenas de Markov
#Parámetros monitoreados
parameters <- c("thetah_A", "thetaf_A", "thetah_B", "thetaf_B",
"Pr_thetah_A", "Pr_thetaf_A", "Pr_thetah_B", "Pr_thetaf_B",
"muHA","muHB","muFA","muFB",
"Pr_muHA","Pr_muHB","Pr_muFA","Pr_muFB",
"deltaH","deltaF",
"Pr_deltaH","Pr_deltaF",
"muH", "muF",
"Pr_muH", "Pr_muF",
"Pr_h_A", " Pr_h_B", " Pr_fa_A", " Pr_fa_B")
niter <- 50000    #Iteraciones
burnin <- 5000     #No. de primeros sampleos en ignorarse
#Corremos el modelo
samples <- jags(data, inits=myinits, parameters,
model.file ="Delta-Rate.bug",
n.chains=1, n.iter=niter, n.burnin=burnin, n.thin=1)
####################################################################
# Jalamos los resultados d
setwd("C:/Users/Alejandro/Desktop/afchavez19/MichaelLee/SDT Mirror Effect/Data")
rm(list=ls())
dir()
library(R2jags)
##############################################################
##############################################################
#Diferencias en Hits y Falsas Alarmas
#Modelo 1 :  Diferencias entre las Tasas H y FA (parametros TauH y TauF)
#            contra datos generados usando las priors
##############################################################
######################################################
#Especificamos el Experimento y los Datos a analizar
experimento <- 1
###################
if (experimento == 1)    #Una Figura de Ebbinghaus
{
exp <- 1
archive <-'Ex_1Ebb_TODOS.csv'         #El archivo que contiene los datos
datos <- read.csv(archive)          #Jalamos los datos del archivo
}
if (experimento == 2)   # Dos Figuras de Ebbinghaus
{
exp <- 2
archive <-'Ex_2Ebb_TODOS_Sin1.csv'  #El archivo que contiene los datos
datos <- read.csv(archive)          #Jalamos los datos
}
h_A <- datos$A_H       #Hits(A)
h_B <- datos$B_H     #Hits(B)
fa_A <- datos$A_FA        #FA(A)
fa_B <- datos$B_FA      #FA(B)
k <- 20                       #Participantes
s <- 160       #Ensayos con Señal
n <- 160       #Ensayos con Ruido
############################################################################
############################################################################
#Escribimos el modelo Inicial
############################################################################
write('
model{
#Posterior estimations (based on the data collected)
for (i in 1:k){
# Posterior density based on our data
h_A[i] ~ dbin(thetah_A[i],s)
fa_A[i] ~ dbin(thetaf_A[i],n)
h_B[i] ~ dbin(thetah_B[i],s)
fa_B[i] ~ dbin(thetaf_B[i],n)
# Reparameterization Using Equal-Variance Gaussian SDT
thetah_A[i] <- realH[i] + deltaH[i]/2
thetaf_A[i] <- realF[i] - deltaF[i]/2
thetah_B[i] <- realH[i] - deltaH[i]/2
thetaf_B[i] <- realF[i] + deltaF[i]/2
realH[i] ~ dbeta(1,1)T(0,0.5)
realF[i] ~ dbeta(1,1)T(0,0.5)
deltaH[i] ~ dnorm(muH,sdH)
deltaF[i] ~ dnorm(muF,sdF)
}
muH ~ dbeta(1,1)T(0.5,1)
muF ~ dbeta(1,1)T(0,0.5)
sdH ~ dbeta(1,1)T(0.001,.25)
sdF ~ dbeta(1,1)T(0.001,.25)
}','Delta-Rate.bug')
######################################
######################################
# Definimos los elementos de trabajo
######################################
data <- list("fa_A", "fa_B", "h_B", "h_A", "s", "n", "k")                    #Los datos que vamos a utilizar para nuestro modelo
myinits <- list(
list(muH = 0.75,muF = 0.25))      #Valores iniciales para las extracciones de las cadenas de Markov
#Parámetros monitoreados
parameters <- c("thetah_A", "thetaf_A", "thetah_B", "thetaf_B",
"Pr_thetah_A", "Pr_thetaf_A", "Pr_thetah_B", "Pr_thetaf_B",
"muHA","muHB","muFA","muFB",
"Pr_muHA","Pr_muHB","Pr_muFA","Pr_muFB",
"deltaH","deltaF",
"Pr_deltaH","Pr_deltaF",
"muH", "muF",
"Pr_muH", "Pr_muF",
"Pr_h_A", " Pr_h_B", " Pr_fa_A", " Pr_fa_B")
niter <- 50000    #Iteraciones
burnin <- 5000     #No. de primeros sampleos en ignorarse
#Corremos el modelo
samples <- jags(data, inits=myinits, parameters,
model.file ="Delta-Rate.bug",
n.chains=1, n.iter=niter, n.burnin=burnin, n.thin=1)
####################################################################
# Jalamos los resultados d
