barplot(counts, main="Distribución de dioptrías",
xlab="Dioptrías")
tabulado <-(count(datos.TCT$x)); tabulado
tabulado <- tabulado[-1,]; tabulado
counts <- table(tabulado$x)
barplot(counts, main="Distribución de dioptrías",
xlab="Dioptrías")
counts <- table(datos.TCT$x)
barplot(counts, main="Distribución de dioptrías",
xlab="Dioptrías")
datos.TCT<- datos.TCT[-1,]; datos.TCT
tabulado <-(count(datos.TCT$x)); tabulado
tabulado <- tabulado[-1,]; tabulado
tabulado <- tabulado[-1,]; tabulado
counts <- table(datos.TCT$x)
counts <- table(tabulado)
barplot(counts, main="Distribución de dioptrías",
xlab="Dioptrías")
counts <- table(tabulado$x)
barplot(counts, main="Distribución de dioptrías",
xlab="Dioptrías")
View(tabulado)
hist(datos.TCT$x)
hist(datos.TCT$x, breaks="FD")
library(ggplot2)
f <- ggplot(tabulado, aes(x = x, y = freq))
f + geom_bar(stat = "identity")
f + geom_bar(stat = "identity") + geom_histogram(binwidth=0.25)
f + geom_histogram(binwidth=0.25)
f + geom_bar(stat = "identity")
tabulado <-(count(datos.TCT$x)); tabulado
f <- ggplot(tabulado, aes(x = x, y = freq))
f + geom_bar(stat = "identity")
f <- ggplot(tabulado, aes(x = x, y = freq))
f + geom_bar(stat = "bin")
f + geom_bar(stat = "identity")
f + geom_bar(stat = "identity", width=0.25)
f + geom_bar(stat = "identity")
f + geom_bar(stat = "identity", lwd=0.25)
f + geom_bar(stat = "identity", lwd=0.25)
f + geom_bar(stat = "identity", colour="blue", lwd=0.25)
f + geom_bar(stat = "identity", colour="blue", lwd=0.25) + geom_text(aes(label=Number)
f + geom_bar(stat = "identity", colour="blue", lwd=0.25) + geom_text(aes(label=Number))
f + geom_bar(stat = "identity", colour="blue", lwd=0.25)
f + geom_bar(stat = "identity", colour="blue", lwd=0.25) + scale_x_discrete("Lengthclass [mm]")
f + geom_bar(stat = "identity", colour="blue", lwd=0.25) + scale_x_continuous("Lengthclass [mm]")
+ scale_x_continuous("Lengthclass [mm]", limits=c(-11,0),breaks=c(-10.75, -10.50)))
+ scale_x_continuous("Lengthclass [mm]", limits=c(-11,0),breaks=c(-10.75, -10.50, 0)))
f + geom_bar(stat = "identity", colour="blue", lwd=0.25)
+ theme(axis.text.x = element_text(angle=90, vjust = 0.5))
f + geom_bar(stat = "identity", colour="blue", lwd=0.25) +  theme_minimal()
f + geom_bar(stat = "identity", colour="blue", lwd=0.25) +  theme_minimal()
f <- ggplot(tabulado, aes(x = x, y = freq))
f + geom_bar(stat = "identity", colour="blue", lwd=0.25) +  theme_minimal()
f + geom_bar(stat = "identity", colour="blue", lwd=0.25) +  theme_minimal()
+ theme(axis.text.x = element_text(angle=90, vjust = 0.5))
f + geom_bar(stat = "identity", colour="blue", width = 0.9,
position = position_nudge(x = 0.5))) +  theme_minimal()
f + geom_bar(stat = "identity", colour="blue", width = 0.9,
position = position_nudge(x = 0.5))
f + geom_bar(stat = "identity", colour="blue", width = 0.25,
position = position_nudge(x = 0.5))
f + geom_bar(stat = "identity", colour="blue",
position = position_nudge(x = 0.5))
f + geom_bar(stat = "identity", colour="blue", width = 0.25)
f + geom_bar(stat = "identity", colour="blue", width = 0.2)
f <- ggplot(tabulado, aes(x = x, y = freq, fill = c))
f + geom_bar(stat = "identity", colour="blue", width = 0.2)
f <- ggplot(tabulado, aes(x = x, y = freq))
f + geom_bar(stat = "identity", colour="blue", width = 0.2)
f + geom_bar(stat = "identity", colour="blue", width = 0.2) +
scale_x_discrete(labels = levels(as.factor(tabulado$x)))
f + geom_bar(stat = "identity", colour="blue", width = 0.2) +
scale_x_discrete(labels = levels(as.factor(tabulado$x)))
+ theme(axis.text.x = element_text(angle = 90, hjust = 1))
f + geom_bar(stat = "identity", colour="blue", width = 0.2) +
scale_x_discrete(labels = levels(as.factor(tabulado$x)))
f + geom_bar(stat = "identity", colour="blue", width = 0.2) +
scale_x_continuous(breaks = unique(tabulado$x))
f + geom_bar(stat = "identity", colour="blue", width = 0.2) +
scale_x_continuous(breaks = unique(tabulado$x)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
f <- ggplot(tabulado, aes(x = x, y = freq)) +  ggtitle("Plot of length \n by dose") +
xlab("Dose (mg)") + ylab("Teeth length")
f + geom_bar(stat = "identity", colour="blue", width = 0.2) +
scale_x_continuous(breaks = unique(tabulado$x)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
f <- ggplot(tabulado, aes(x = x, y = freq)) +  ggtitle("Histograma de frecuencias") +
xlab("Dioptrías") + ylab("Frecuencia")
f + geom_bar(stat = "identity", colour="blue", width = 0.2) +
scale_x_continuous(breaks = unique(tabulado$x)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
f <- ggplot(tabulado, aes(x = x, y = freq)) +
labs(title="Histograma de frecuencias", x ="Dioptrías", y = "Frecuencia")
f + geom_bar(stat = "identity", colour="blue", width = 0.2) +
scale_x_continuous(breaks = unique(tabulado$x)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
tab.T <-(count(datos.TCT$t)); tab.T
tab.E <-(count(datos.TCT$e)); tab.E
Obs <- ggplot(tab.X, aes(x = x, y = freq)) +
labs(title="Histograma de frecuencias", x ="Dioptrías", y = "Frecuencia")
tab.X <-(count(datos.TCT$x)); tab.X
Obs <- ggplot(tab.X, aes(x = x, y = freq)) +
labs(title="Histograma de frecuencias", x ="Dioptrías", y = "Frecuencia")
Obs + geom_bar(stat = "identity", colour="blue", width = 0.2) +
scale_x_continuous(breaks = unique(tab.X$x)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
Ver <- ggplot(data=datos.TCT, aes(datos.TCT$t)) +
geom_histogram(breaks=seq(20, 50, by=2))
Ver <- ggplot(data=datos.TCT, aes(datos.TCT$t)) +
geom_histogram(breaks=seq(20, 50, by=2))
View(datos.TCT)
describe(datos.TCT$t)
library(psych)
describe(datos.TCT$t)
Ver <- ggplot(data=datos.TCT, aes(datos.TCT$t)) +
geom_histogram(breaks=seq(-11, 0, by=0.25))
hist(datos.TCT$t)
ggplot(data=datos.TCT, aes(datos.TCT$t)) + geom_histogram()
ggplot(data=datos.TCT, aes(datos.TCT$t)) + geom_histogram(breaks=seq(-10, 0, by=0.25))
ggplot(data=datos.TCT, aes(datos.TCT$t)) + scale_x_continuous(breaks = unique(tab.X$x))
ggplot(data=datos.TCT, aes(datos.TCT$t)) + scale_x_continuous(breaks = unique(tab.X$t))
ggplot(data=datos.TCT, aes(datos.TCT$t)) + scale_x_continuous(breaks = unique(datos.TCT$t))
ggplot(data=datos.TCT, aes(datos.TCT$t))
ggplot(data=datos.TCT, aes(datos.TCT$t)) + geom_histogram()
ggplot(data=datos.TCT, aes(datos.TCT$t)) + geom_histogram(binwidth = 0.2)
ggplot(data=datos.TCT, aes(datos.TCT$t)) + geom_histogram()
ggplot(data=datos.TCT, aes(datos.TCT$t)) + geom_histogram(bins = 40)
ggplot(data=datos.TCT, aes(datos.TCT$t)) + geom_histogram(bins = 40) +
+ geom_bar(stat = "identity", colour="blue", width = 0.2)
ggplot(data=datos.TCT, aes(datos.TCT$t)) + geom_histogram(bins = 40) +
+ geom_bar(stat = "bin", colour="blue", width = 0.2)
ggplot(data=datos.TCT, aes(datos.TCT$t)) + geom_histogram(binwidth = 0.01)
ggplot(data=datos.TCT, aes(datos.TCT$t)) + geom_histogram(bins = 200)
ggplot(data=datos.TCT, aes(datos.TCT$t)) + geom_histogram(bins = 40)
Obs <- ggplot(tab.X, aes(x = x, y = freq)) +
labs(title="Histograma de frecuencias", x ="Dioptrías", y = "Frecuencia")
Obs + geom_bar(stat = "identity", colour="blue", width = 0.2) +
scale_x_continuous(breaks = unique(tab.X$x)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data=datos.TCT, aes(datos.TCT$t)) + geom_histogram(bins = 40, colour="blue")
ggplot(data=datos.TCT, aes(datos.TCT$t)) + geom_histogram(bins = 41, colour="blue")
ggplot(data=datos.TCT, aes(datos.TCT$t)) + geom_histogram(bins = 42, colour="blue")
Obs <- ggplot(tab.X, aes(x = x, y = freq)) +
labs(title="Histograma de frecuencias", x ="Dioptrías", y = "Frecuencia")
Obs + geom_bar(stat = "identity", colour="blue", width = 0.2) +
scale_x_continuous(breaks = unique(tab.X$x)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data=datos.TCT, aes(datos.TCT$t)) + geom_histogram(bins = 42, colour="blue")
ggplot(data=datos.TCT, aes(datos.TCT$t)) + geom_histogram(bins = 41, colour="blue")
ggplot(data=datos.TCT, aes(datos.TCT$t)) + geom_histogram(bins = 41, colour="blue", width = 0.2)
y
ggplot(data=datos.TCT, aes(datos.TCT$t)) + geom_histogram(bins = 41, colour="blue")
Obs <- ggplot(tab.X, aes(x = x, y = freq)) +
labs(title="Histograma de frecuencias puntuación observada", x ="Dioptrías", y = "Frecuencia")
Obs + geom_bar(stat = "identity", colour="blue", width = 0.2) +
scale_x_continuous(breaks = unique(tab.X$x)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data=datos.TCT, aes(datos.TCT$t)) + geom_histogram(bins = 41, colour="blue") +
labs(title="Histograma de frecuencias puntuación verdadera", x ="Dioptrías", y = "Frecuencia")
# histograma puntuación verdadera (contínua)
ggplot(data=datos.TCT, aes(datos.TCT$e)) + geom_histogram(bins = 41, colour="blue") +
labs(title="Histograma de frecuencias puntuación error", x ="Dioptrías", y = "Frecuencia")
describe(datos.TCT$t)
describe(datos.TCT$x)
describe(datos.TCT$e)
mean(datos.TCT$x)
mean(datos.TCT$t)
mean(datos.TCT$e)
options(digits=2)
mean(datos.TCT$x)
mean(datos.TCT$t)
options(digits=3)
mean(datos.TCT$x)
mean(datos.TCT$t)
mean(datos.TCT$e)
options(scipen=999)
options(digits=3)
mean(datos.TCT$x)
mean(datos.TCT$t)
mean(datos.TCT$e)
options(digits=3)
mean(datos.TCT$e)
options(digits=3)
mean(datos.TCT$x)
mean(datos.TCT$t)
mean(datos.TCT$e)
options(digits=4)
mean(datos.TCT$x)
mean(datos.TCT$t)
mean(datos.TCT$e)
options(scipen=999)
mean(datos.TCT$x)
mean(datos.TCT$t)
mean(datos.TCT$e)
options(scipen=0)
mean(datos.TCT$x)
mean(datos.TCT$t)
mean(datos.TCT$e)
options(digits=9)
mean(datos.TCT$t)
options(digits=3)
mean(datos.TCT$x)
mean(datos.TCT$t)
options(scipen=999)
mean(datos.TCT$e)
round(mean(datos.TCT$e),1)
round(mean(datos.TCT$e),2)
round(mean(datos.TCT$e),1)
plot(datos.TCT$x, datos.TCT$e)
plot(datos.TCT$t, datos.TCT$e)
cov(datos.TCT$t, datos.TCT$e)
round(cov(datos.TCT$t, datos.TCT$e),1)
plot(datos.TCT$x, datos.TCT$t); corr(datos.TCT$x, datos.TCT$t)
plot(datos.TCT$x, datos.TCT$t); cor(datos.TCT$x, datos.TCT$t)
# Regresión lineal
lm(formula = datos.TCT$t ~ datos.TCT$x, data = datos.TCT)
sd(datos.TCT$x)
sd(datos.TCT$t)
sd(datos.TCT$e)
plot(datos.TCT$x, datos.TCT$e); cor(datos.TCT$x, datos.TCT$e) # plot y correlación entre puntuación observada y puntuación error
simular <- function(valor_esperado_t, varianza_t, varianza_e, n_personas){
beta <- -valor_esperado_t/varianza_t
alpha <- -valor_esperado_t*beta
t <- round(-0.50 - rgamma(n = n_personas, shape = alpha, rate = beta), digits = 4)
e <- rnorm(n = n_personas, mean = 0, sd = sqrt(varianza_e))
x <- round(4*(t + e), digits = 0) / 4
x[x > -0.25] <- -0.25
e = x - t;
as.data.frame(cbind(x, t, e))
}
set.seed(666)
datos.TCT <- simular(valor_esperado_t = -1, varianza_t = 0.8, varianza_e = 0.04, n_personas = 100000)
library(plyr)
tab.X <-(count(datos.TCT$x)); tab.X
library(ggplot2)
# histograma puntuación observada (discreta)
Obs <- ggplot(tab.X, aes(x = x, y = freq)) +
labs(title="Histograma de frecuencias puntuación observada", x ="Dioptrías", y = "Frecuencia")
Obs + geom_bar(stat = "identity", colour="blue", width = 0.2) +
scale_x_continuous(breaks = unique(tab.X$x)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# histograma puntuación verdadera (contínua)
ggplot(data=datos.TCT, aes(datos.TCT$t)) + geom_histogram(bins = 41, colour="blue") +
labs(title="Histograma de frecuencias puntuación verdadera", x ="Dioptrías", y = "Frecuencia")
# histograma puntuación verdadera (¿discreta o contínua?)
ggplot(data=datos.TCT, aes(datos.TCT$e)) + geom_histogram(bins = 41, colour="blue") +
labs(title="Histograma de frecuencias puntuación error", x ="Dioptrías", y = "Frecuencia")
# Descriptivos de las variables
options(scipen=999)
options(digits=3)
mean(datos.TCT$x) # media de la puntuación observada
mean(datos.TCT$t) # media de la puntuación verdadera
round(mean(datos.TCT$e),1) # media de la puntuación error
round(mean(datos.TCT$e),3) # media de la puntuación error
round(mean(datos.TCT$e),4) # media de la puntuación error
round(mean(datos.TCT$e),5) # media de la puntuación error
# Confiabilidad
confiabilidad <- (var(datos.TCT$t)/var(datos.TCT$t)); confiabilidad
library(ShinyItemAnalysis)
install.packages("stringi")
install.packages("stringi")
simular <- function(valor_esperado_t, varianza_t, varianza_e, n_personas){
beta <- -valor_esperado_t/varianza_t
alpha <- -valor_esperado_t*beta
t <- round(-0.50 - rgamma(n = n_personas, shape = alpha, rate = beta), digits = 4)
e <- rnorm(n = n_personas, mean = 0, sd = sqrt(varianza_e))
x <- round(4*(t + e), digits = 0) / 4
x[x > -0.25] <- -0.25
e = x - t;
as.data.frame(cbind(x, t, e))
}
set.seed(70368)
datos.TCT <- simular(valor_esperado_t = -1, varianza_t = 0.8, varianza_e = 0.04, n_personas = 100000)
library(plyr)
tab.X <-(count(datos.TCT$x)); tab.X
library(ggplot2)
# histograma puntuación observada (discreta)
Obs <- ggplot(tab.X, aes(x = x, y = freq)) +
labs(title="Histograma de frecuencias puntuación observada", x ="Dioptrías", y = "Frecuencia")
Obs + geom_bar(stat = "identity", colour="blue", width = 0.2) +
scale_x_continuous(breaks = unique(tab.X$x)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# histograma puntuación verdadera (contínua)
ggplot(data=datos.TCT, aes(datos.TCT$t)) + geom_histogram(bins = 41, colour="blue") +
labs(title="Histograma de frecuencias puntuación verdadera", x ="Dioptrías", y = "Frecuencia")
# histograma puntuación verdadera (¿discreta o contínua?)
ggplot(data=datos.TCT, aes(datos.TCT$e)) + geom_histogram(bins = 41, colour="blue") +
labs(title="Histograma de frecuencias puntuación error", x ="Dioptrías", y = "Frecuencia")
mean(datos.TCT$x) # media de la puntuación observada
mean(datos.TCT$t) # media de la puntuación verdadera
mean(datos.TCT$e) # media de la puntuación error
var.x<-var(datos.TCT$x) # desviación estándar de la puntuación observada
var.t<-var(datos.TCT$t) # desviación estándar de la puntuación verdadera
var.e<-var(datos.TCT$e) # desviación estándar de la puntuación error
plot(datos.TCT$x, datos.TCT$t, main="Diagrama de dispersión", xlab="Puntuación observada (X)",
ylab="Puntuación verdadera (T)");
cor(datos.TCT$x, datos.TCT$t) # plot y correlación entre puntuación observada y puntuación verdadera
abline(-0.0795, 0.9469, col = "red", lwd = 2)
plot(datos.TCT$x, datos.TCT$t, main="Diagrama de dispersión", xlab="Puntuación observada (X)",
ylab="Puntuación verdadera (T)");
cor(datos.TCT$x, datos.TCT$t) # plot y correlación entre puntuación observada y puntuación verdadera
abline(-0.0795, 0.9469, col = "red", lwd = 2)
mtext(bquote( T == .(0.9469) * X - .(0.0795)), side=1, line=4)
plot(datos.TCT$x, datos.TCT$e, main="Diagrama de dispersión", xlab="Puntuación observada (X)",
ylab="Puntuación error (E)"); cor(datos.TCT$x, datos.TCT$e) # plot y correlación entre puntuación observada y puntuación error
plot(datos.TCT$t, datos.TCT$e, main="Diagrama de dispersión", xlab="Puntuación verdadera (T)",
ylab="Puntuación error (E)"); cov(datos.TCT$t, datos.TCT$e) # plot y covarianza entre puntuación verdadera y puntuación error
# Regresión lineal
lm(formula = datos.TCT$t ~ datos.TCT$x, data = datos.TCT)
a <- (var(datos.TCT$t)/var(datos.TCT$x)); a
b <- (1-a)*mean(datos.TCT$x); b
estima.diopt.ver <- a*(-3.5) + b; estima.diopt.ver
estima.diopt.ver <- a*(-8.5) + b; estima.diopt.ver
estima.diopt.ver <- a*(-10.5) + b; estima.diopt.ver
estima.diopt.ver <- a*(-0.5) + b; estima.diopt.ver
estima.diopt.ver <- a*(-1.5) + b; estima.diopt.ver
estima.diopt.ver <- a*(-1.75) + b; estima.diopt.ver
estima.diopt.ver <- a*(-1.25) + b; estima.diopt.ver
estima.diopt.ver <- a*(-1.5) + b; estima.diopt.ver
simular <- function(valor_esperado_t, varianza_t, varianza_e, n_personas){
beta <- -valor_esperado_t/varianza_t
alpha <- -valor_esperado_t*beta
t <- round(-0.50 - rgamma(n = n_personas, shape = alpha, rate = beta), digits = 4)
e <- rnorm(n = n_personas, mean = 0, sd = sqrt(varianza_e))
x <- round(4*(t + e), digits = 0) / 4
x[x > -0.25] <- -0.25
e = x - t;
as.data.frame(cbind(x, t, e))
}
set.seed(70368)
datos.TCT <- simular(valor_esperado_t = -1, varianza_t = 0.8, varianza_e = 0.04, n_personas = 100000)
library(plyr)
tab.X <-(count(datos.TCT$x)); tab.X
library(mirt)
theta <- seq(-3, 3, .1)
bmedium <- 0
amoderate <- 1
P <- 1 / (1 + exp(-amoderate * (theta - bmedium)))
plot(theta, P)
plot(theta, P, type="l")
help("plot")
?plot
par(lab=c(10,10,2000)) #Asigna en los par?metros la separación que tendrán (eje x, eje y, extra) (x, y, len)
theta <- seq(-3, 3, .1)
b <- 0
a <- 1
P <- 1 / (1 + exp(-a * (theta - b)))
plot(theta, P, type="o", xlim=c(-3,3), ylim=c(0,1),  # type="l"
xlab=expression(paste("Habilidad, ",theta)),
ylab=expression(paste("Probabilidad de responder correctamente, P (",theta,")")))
par(lab=c(10,10,1))
theta <- seq(-3, 3, .1)
b <- 0
a <- 1
P <- 1 / (1 + exp(-a * (theta - b)))
plot(theta, P, type="o", xlim=c(-3,3), ylim=c(0,1),
main="Figura 1. Curva característica de un item con dificultad media
y discriminación moderada",
# sub="Ver Baker y Kim (2016).",
xlab=expression(paste("Habilidad, ",theta)),
ylab=expression(paste("Probabilidad de responder correctamente, P (",theta,")")))
iccplot <- function(b) {
par(lab=c(7,3,3))
theta <- seq(-7, 7, .1)
P <- 1 / (1 + exp(-1 * (theta - b)))
plot(theta, P, type="l", xlim=c(-7,7), ylim=c(0,1),
xlab=expression(paste("Habilidad, ",theta)),
ylab=expression(paste("Probabilidad de responder correctamente, P (",theta,")")))
}
iccplot(0)
iccplot(b=0) # Si cambian los valores de los parámetros a y b se modifica la forma general de la figura
#Dificultades
bmuyfacil <- -2.625
bfacil <- -1.5
bmedia <- 0
bdificil <- 1.5
bmuydificil <- 2.625
iccplot(bmedia)
par(new=T)
iccplot(bfacil)
par(new=T)
iccplot(bdificil)
par(new=T)
iccplot(bmuyfacil)
par(new=T)
iccplot(bmuydificil)
theta <- seq(-3, 3, .1)
theta
bmedium <- 0
bmedium <- 0
#amoderate <- 1
P <- 1 / (1 + exp(-(theta - bmedium)))
plot(theta, P)
plot(theta, P)
plot(theta, P, type="l")
par(lab=c(10,10,2000)) #Asigna en los par?metros la separación que tendrán (eje x, eje y, extra) (x, y, len)
theta <- seq(-3, 3, .1)
b <- 0
P <- 1 / (1 + exp(-(theta - b)))
plot(theta, P, type="o", xlim=c(-3,3), ylim=c(0,1),  # type="l"
xlab=expression(paste("Habilidad, ",theta)),
ylab=expression(paste("Probabilidad de responder correctamente, P (",theta,")")))
par(lab=c(10,10,1))
theta <- seq(-3, 3, .1)
b <- 0
P <- 1 / (1 + exp(-(theta - b)))
plot(theta, P, type="o", xlim=c(-3,3), ylim=c(0,1),
main="Figura 1. Curva característica de un item con dificultad media
y discriminación moderada",
# sub="Ver Baker y Kim (2016).",
xlab=expression(paste("Habilidad, ",theta)),
ylab=expression(paste("Probabilidad de responder correctamente, P (",theta,")")))
iccplot <- function(b) {
par(lab=c(7,3,3))
theta <- seq(-7, 7, .1)
P <- 1 / (1 + exp(-1 * (theta - b)))
plot(theta, P, type="l", xlim=c(-7,7), ylim=c(0,1),
xlab=expression(paste("Habilidad, ",theta)),
ylab=expression(paste("Probabilidad de responder correctamente, P (",theta,")")))
}
iccplot(0)
iccplot(b=0) # Si cambian los valores de los parámetros a y b se modifica la forma general de la figura
#Dificultades
bmuyfacil <- -2.625
bfacil <- -1.5
bmedia <- 0
bdificil <- 1.5
bmuydificil <- 2.625
iccplot(bmedia)
par(new=T)
par(new=T)
iccplot(bfacil)
par(new=T)
iccplot(bdificil)
par(new=T)
iccplot(bmuyfacil)
par(new=T)
iccplot(bmuydificil)
library(devtools)
install_github("cddesja/hemp")
library(hemp)
onepl_mod <- "F = 1 - 16
CONSTRAIN = (1 - 16, a1)"
onepl_fit <- mirt(data = SAPA, model = onepl_mod, SE = TRUE)
onepl_params <- coef(onepl_fit, IRTpars = TRUE, simplify = TRUE)
onepl_params <- coef(onepl_fit, IRTpars = TRUE, simplify = TRUE); onepl_params
# Rasch Model
rasch_mod <- "F = 1 - 16"
rasch_fit <- mirt(data = SAPA, model = rasch_mod,
itemtype = "Rasch", SE = TRUE, IRTpars = T, simplify=TRUE)
rasch_fit <- mirt(data = SAPA, model = rasch_mod,
itemtype = "Rasch", SE = TRUE)
rasch_params <- coef(rasch_fit, IRTpars = TRUE, simplify = TRUE)
rasch_items <- rasch_params$items
head(rasch_items)
?SAPA
data(SAPA)
library(psych)
describe(SAPA)
write.csv(SAPA, "SAPA.csv")
xbar=374
n = 27
mu = 400
var = 115
z<-(xbar-mu)/(var/sqrt(n)); z
dnorm(-1.174782)
xbar=374
n<-27
mu<-320
var<-115
z<-(xbar-mu)/(var/sqrt(n)); z
xbar=374
n<-27
mu<-350
var<-115
z<-(xbar-mu)/(var/sqrt(n)); z
mu<-335
z<-(xbar-mu)/(var/sqrt(n)); z
xbar=374
mu<-345
z<-(xbar-mu)/(var/sqrt(n)); z
z<-(xbar-mu)/(var/sqrt(n)); z
xbar=374
n<-27
mu<-355
var<-115
z<-(xbar-mu)/(var/sqrt(n)); z
xbar=374
n<-27
mu<-355
var<-115
z<-(xbar-mu)/(var/sqrt(n)); z
pnorm(0.8584947) #se obtiene el valor de la probabilidad.
dnorm(-1.174782)
xbar=374
n<-27
mu<-455
var<-115
z<-(xbar-mu)/(var/sqrt(n)); z
xbar=374
n<-27
mu<-415
var<-115
z<-(xbar-mu)/(var/sqrt(n)); z
## [1] 0.8584947
xbar=374
n<-27
mu<-435
var<-115
z<-(xbar-mu)/(var/sqrt(n)); z
pnorm(-2.75622) #se obtiene el valor de la probabilidad.
