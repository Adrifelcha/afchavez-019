Datos <- Respuestas[complete.cases(Respuestas),]
D_E1 <- R_E1[complete.cases(R_E1),]
D_E2 <- R_E2[complete.cases(R_E2),]
D_E3 <- R_E3[complete.cases(R_E3),]
################################################################
################################################################
########################   I N D I C E S    D E     L A     TCT
##################################################################
#Distribución de puntajes totales alcanzados
Total <- NULL
for(i in 1:nrow(Datos)){
Total[i] <- sum(Datos[i,])
}
min(Total)
max(Total)
hist(Total, breaks = seq(0,50,1), axes=F, main="Distribución de Puntaje Total en la muestra", col="goldenrod3",
xlab="Puntaje total",ylab="Frecuencia (No. de sustentantes)", cex.lab=1.3, ylim=c(0,1000),
panel.first =
c(lines(c(0,1),c(1,1),lwd=2,lty=3, col="black"),lines(c(0,1),c(0.05,0.05),lwd=2,lty=3, col="black"),
lines(c(0,1),c(.1,.1),lwd=2,lty=3, col="black"),lines(c(0,1),c(.15,.15),lwd=2,lty=3, col="black"),
lines(c(0,1),c(.2,.2),lwd=2,lty=3, col="black"),lines(c(0,1),c(.25,.25),lwd=2,lty=3, col="black"),
lines(c(0,1),c(.3,.3),lwd=2,lty=3, col="black"),lines(c(0,1),c(.35,.35),lwd=2,lty=3, col="black"),
lines(c(0,1),c(.4,.4),lwd=2,lty=3, col="black"),lines(c(0,1),c(.45,.45),lwd=2,lty=3, col="black"),
lines(c(0,1),c(.5,.5),lwd=2,lty=3, col="black"),lines(c(0,1),c(.55,.55),lwd=2,lty=3, col="black"),
lines(c(0,1),c(.6,.6),lwd=2,lty=3, col="black"),lines(c(0,1),c(.65,.65),lwd=2,lty=3, col="black"),
lines(c(0,1),c(.7,.7),lwd=2,lty=3, col="black"),lines(c(0,1),c(.75,.75),lwd=2,lty=3, col="black"),
lines(c(0,1),c(.8,.8),lwd=2,lty=3, col="black"),lines(c(0,1),c(.85,.85),lwd=2,lty=3, col="black"),
lines(c(0,1),c(.9,.9),lwd=2,lty=3, col="black"),lines(c(0,1),c(.95,.95),lwd=2,lty=3, col="black"),
lines(c(0,1),c(1,1),lwd=2,lty=3, col="black")))
axis(1, seq(0.5,49.5,1), seq(1,50.1))
axis(2, seq(0,1000,50), seq(0,1000,50))
#####################################################################
### Indices de dificultad
P <- NULL
for(i in 1:ncol(Datos)){
P[i] <- mean(Datos[,i])
}
min(P)
max(P)
hist(P, breaks = seq(0.0,1,.05), axes=F, main="Distribución de Índices de Dificultad clásicos", col="indianred3",
xlab="Índice de dificultad",ylab="Frecuencia (No. de items)", cex.lab=1.3,
panel.first =
c(lines(c(0,1),c(1,1),lwd=2,lty=3, col="black"),lines(c(0,1),c(0.0625,0.0625),lwd=2,lty=3, col="black"),
lines(c(0,1),c(.125,.125),lwd=2,lty=3, col="black"),lines(c(0,1),c(.1875,.1875),lwd=2,lty=3, col="black"),
lines(c(0,1),c(.25,.25),lwd=2,lty=3, col="black"),lines(c(0,1),c(.3125,.3125),lwd=2,lty=3, col="black"),
lines(c(0,1),c(.375,.375),lwd=2,lty=3, col="black"),lines(c(0,1),c(.4375,.4375),lwd=2,lty=3, col="black"),
lines(c(0,1),c(.5,.5),lwd=2,lty=3, col="black"),lines(c(0,1),c(.5625,.5625),lwd=2,lty=3, col="black"),
lines(c(0,1),c(.625,.625),lwd=2,lty=3, col="black"),lines(c(0,1),c(.6875,.6875),lwd=2,lty=3, col="black"),
lines(c(0,1),c(.75,.75),lwd=2,lty=3, col="black"),lines(c(0,1),c(.8125,.8125),lwd=2,lty=3, col="black"),
lines(c(0,1),c(.875,.875),lwd=2,lty=3, col="black"),lines(c(0,1),c(.9375,.9375),lwd=2,lty=3, col="black"),
lines(c(0,1),c(1,1),lwd=2,lty=3, col="black")))
axis(1, seq(0,1,0.05), seq(0,1,0.05))
axis(2, seq(0,16,1), seq(0,16,1))
#############################################
##
#    Correlaciones      #####################
##
#############################################
cor_dat <- cor(Datos)
lowerCor(Datos)
corPlot(Datos)   #Note all correlations are *almost* positive
#Ordenamos las correlaciones en orden ascendente y descendiente
ascendiente <- sort(lowerCor(Datos))
descendiente <- sort(lowerCor(Datos), decreasing=TRUE)
ascendiente[c(1,3,5,7,9)]   #Cinco correlaciones más BAJAS
#-.003, -.002,   0.0003,    0.002,   0.004
descendiente[c(51,53,55,57,59)]    #Cinco correlaiones más ALTAS
#.251,    .246     .236     .229     .223
library(corrplot)
round(cor_dat,2)
corrplot(cor_dat, type = "upper", order = "hclust",    #This is just a cool plot, which utility gets lost due to the
tl.col = "black", tl.srt = 45)                            #very low levels of Correlation reflected in our data
#############################################
##
#    ALFA DE CRONBACH      ##################
##
#############################################
#Calculamos las alphas
Cronbach_general <- alpha(Datos); Cronbach_general
# 0.82
Cronbach_Eje1 <- alpha(D_E1); Cronbach_Eje1
# 0.67
Cronbach_Eje2 <- alpha(D_E2); Cronbach_Eje2
# 0.59
Cronbach_Eje3 <- alpha(D_E3); Cronbach_Eje3
# 0.54
#library(psy)             # Aquí hay código con otro paquete, pero el resultado es el mismo
#cronbach(Datos)          #      y el output es menos informativo
#cronbach(D_E1)
#cronbach(D_E2)
#cronbach(D_E3)
##########################################################
##########################################################
##########################################################
# Primera revisión de la composición de los datos
#
# Análisis de Componentes Principales (ACP)
# Análisis Paralelo
# VSS
##
#############################################
ACP <- prcomp(Datos, cor=TRUE)
summary(ACP)
plot(ACP,type="lines", main="Principal Component Analysis - Screeplot")   #Line Screeplot
screeplot(ACP)   #Bar screeplot
#According to the Screeplot, 1 component seems to be good enough
AP <- fa.parallel(Datos); AP
#Suggest that number of factors = 18 with 5 components
VSS <- vss(Datos);VSS
#Velicer MAP criterion achieves a minimun with 1 factor
#BIC achieves a minimum with 4 factors
#BIC-Sample Size adjusted is reduced with 7 factors
library(nFactors)
ev <- eigen(cor(Datos)) # get eigenvalues
ap <- parallel(subject=nrow(Datos),var=ncol(Datos),
rep=100,cent=.05)
nS <- nScree(x=ev$values, aparallel=ap$eigen$qevpea)
plotnScree(nS)
#############################################
##
# Análisis Factorial
##
#############################################
explore_1 <- factanal(Datos, factors = 1, method = "mle")
explore_2 <- factanal(Datos, factors = 2, method = "mle")
explore_3 <- factanal(Datos, factors = 3, method = "mle")
explore_3b <- factanal(Datos, factors = 3, rotation= "varimax")
explore_4 <- factanal(Datos, factors = 4, method = "mle")
explore_5 <- factanal(Datos, factors = 5, method = "mle")
explore_6 <- factanal(Datos, factors = 6, method = "mle")
explore_7 <- factanal(Datos, factors = 7, method = "mle")
explore_8 <- factanal(Datos, factors = 8, method = "mle")
explore_9 <- factanal(Datos, factors = 9, method = "mle")
explore_10 <- factanal(Datos, factors = 10, method = "mle")
explore_11 <- factanal(Datos, factors = 11, method = "mle")
#############################################
ACP <- prcomp(Datos, cor=TRUE)
summary(ACP)
plot(ACP,type="lines", main="Principal Component Analysis - Screeplot")   #Line Screeplot
screeplot(ACP)   #Bar screeplot
#According to the Screeplot, 1 component seems to be good enough
AP <- fa.parallel(Datos); AP
#Suggest that number of factors = 18 with 5 components
VSS <- vss(Datos);VSS
#Velicer MAP criterion achieves a minimun with 1 factor
#BIC achieves a minimum with 4 factors
#BIC-Sample Size adjusted is reduced with 7 factors
library(nFactors)
ev <- eigen(cor(Datos)) # get eigenvalues
ap <- parallel(subject=nrow(Datos),var=ncol(Datos),
rep=100,cent=.05)
nS <- nScree(x=ev$values, aparallel=ap$eigen$qevpea)
plotnScree(nS)
explore_1 <- factanal(Datos, factors = 1, method = "mle") ; explore_1
Eje_1_1 <- factanal(D_E1, factors = 1, method = "mle") ; Eje_1_1
Eje_1_2 <- factanal(D_E1, factors = 2, method = "mle") ; Eje_1_2
Eje_1_3 <- factanal(D_E1, factors = 3, method = "mle") ; Eje_1_3
Eje_2_1 <- factanal(D_E2, factors = 1, method = "mle") ; Eje_2_1
Eje_3_1 <- factanal(D_E3, factors = 1, method = "mle") ; Eje_3_1
Respuestas$SMB09 <- NULL
Respuestas$SMB22 <- NULL
Respuestas$SMB17 <- NULL
Respuestas$SMB15 <- NULL
View(Respuestas)
#############################################################
Respuestas$SMB09 <- NULL
Respuestas$SMB22 <- NULL
Respuestas$SMB17 <- NULL
Respuestas$SMB15 <- NULL
write.csv(Respuestas, "PLANEA.09.2015_IDENT_ITEMS_ajustado.csv")
#############################################################
Respuestas$SMB09 <- NULL
Respuestas$SMB22 <- NULL
Respuestas$SMB17 <- NULL
Respuestas$SMB15 <- NULL
write.csv(Respuestas, "PLANEA.09.2015_IDENT_ITEMS_ajustado.csv")
Eje_2_1 <- factanal(D_E2, factors = 1, method = "mle") ; Eje_2_1 #SMB22
Eje_3_1 <- factanal(D_E3, factors = 1, method = "mle") ; Eje_3_1 #SMB17 y 15
Eje_1_1 <- factanal(D_E1, factors = 1, method = "mle") ; Eje_1_1 #SMB09
Eje1 <- c(c(1:10),c(26:34))           #Items en el Eje 1: SNPA
Eje2 <- c(c(19:25),40,c(42:45))       #Items en el Eje 2: MI
Eje3 <- c(c(11:18),c(35:39),41)       #Items en el Eje 3: FEM
R_E1 <- Respuestas[,Eje1]
R_E2 <- Respuestas[,Eje2]
R_E3 <- Respuestas[,Eje3]
#Eliminamos los casos con datos faltantes
Datos <- Respuestas[complete.cases(Respuestas),]
D_E1 <- R_E1[complete.cases(R_E1),]
D_E2 <- R_E2[complete.cases(R_E2),]
D_E3 <- R_E3[complete.cases(R_E3),]
#############################################
#    ALFA DE CRONBACH      ##################
#############################################
#Calculamos las alphas
Cronbach_general <- alpha(Datos); Cronbach_general
# 0.82
Cronbach_Eje1 <- alpha(D_E1); Cronbach_Eje1
# 0.67
Cronbach_Eje2 <- alpha(D_E2); Cronbach_Eje2
# 0.59
Cronbach_Eje3 <- alpha(D_E3); Cronbach_Eje3
# 0.54
#############################################################
# Estimacion de algunos de los índices más importantes de la
# TCT y Análisis Facoriales Exploratoris y Confirmatorios para
# la base de datos empleada para la estimación PLANEA 09
#############################################################
rm(list=ls())
library(psych)
setwd("C:/Users/Alejandro/Desktop/afchavez19/RIMEDIE/Mat09_2015/Post-Reunión25042018")
Respuestas <- read.csv("PLANEA.09.2015_IDENT_ITEMS.csv")
Respuestas[,1:12] <- NULL
Eje1 <- c(c(1:10),c(26:35))           #Items en el Eje 1: SNPA
Eje2 <- c(c(19:25),43,c(45:50))       #Items en el Eje 2: MI
Eje3 <- c(c(11:18),c(36:42),44)       #Items en el Eje 3: FEM
R_E1 <- Respuestas[,Eje1]
R_E2 <- Respuestas[,Eje2]
R_E3 <- Respuestas[,Eje3]
#Eliminamos los casos con datos faltantes
Datos <- Respuestas[complete.cases(Respuestas),]
D_E1 <- R_E1[complete.cases(R_E1),]
D_E2 <- R_E2[complete.cases(R_E2),]
D_E3 <- R_E3[complete.cases(R_E3),]
#############################################
#    ALFA DE CRONBACH      ##################
#############################################
#Calculamos las alphas
Cronbach_general <- alpha(Datos); Cronbach_general
# 0.82
Cronbach_Eje1 <- alpha(D_E1); Cronbach_Eje1
# 0.67
Cronbach_Eje2 <- alpha(D_E2); Cronbach_Eje2
# 0.59
Cronbach_Eje3 <- alpha(D_E3); Cronbach_Eje3
# 0.54
##########################################################
##########################################################
##########################################################
# Primera revisión de la composición de los datos
# Análisis de Componentes Principales (ACP)
# Análisis Paralelo
#############################################
ACP <- prcomp(Datos, cor=TRUE)
summary(ACP)
plot(ACP,type="lines", main="Principal Component Analysis - Screeplot")   #Line Screeplot
screeplot(ACP)   #Bar screeplot
#According to the Screeplot, 1 component seems to be good enough
AP <- fa.parallel(Datos); AP
#Suggest that number of factors = 18 with 5 components
#############################################
# Análisis Factorial
#############################################
Eje_1_1 <- factanal(D_E1, factors = 1, method = "mle") ; Eje_1_1 #SMB09
Eje_1_2 <- factanal(D_E1, factors = 2, method = "mle") ; Eje_1_2
Eje_1_3 <- factanal(D_E1, factors = 3, method = "mle") ; Eje_1_3
Eje_2_1 <- factanal(D_E2, factors = 1, method = "mle") ; Eje_2_1 #SMB22 y 24
Eje_2_2 <- factanal(D_E2, factors = 2, method = "mle") ; Eje_2_2
Eje_2_3 <- factanal(D_E2, factors = 3, method = "mle") ; Eje_2_3
Eje_3_1 <- factanal(D_E3, factors = 1, method = "mle") ; Eje_3_1 #SMB17 y 15
Eje_3_2 <- factanal(D_E3, factors = 2, method = "mle") ; Eje_3_2
Eje_3_3 <- factanal(D_E3, factors = 3, method = "mle") ; Eje_3_3
#############################################################
# Ajustamos y quitamos los reactivos que cargaron bajo para
#############################################################
Respuestas$SMB09 <- NULL
Respuestas$SMB22 <- NULL
Respuestas$SMB24 <- NULL
Respuestas$SMB17 <- NULL
Respuestas$SMB15 <- NULL
write.csv(Respuestas, "PLANEA.09.2015_IDENT_ITEMS_ajustado.csv")
Eje1 <- c(c(1:10),c(26:34))           #Items en el Eje 1: SNPA
Eje2 <- c(c(19:25),40,c(42:45))       #Items en el Eje 2: MI
Eje3 <- c(c(11:18),c(35:39),41)       #Items en el Eje 3: FEM
R_E1 <- Respuestas[,Eje1]
R_E2 <- Respuestas[,Eje2]
R_E3 <- Respuestas[,Eje3]
#Eliminamos los casos con datos faltantes
Datos <- Respuestas[complete.cases(Respuestas),]
D_E1 <- R_E1[complete.cases(R_E1),]
D_E2 <- R_E2[complete.cases(R_E2),]
D_E3 <- R_E3[complete.cases(R_E3),]
#############################################
#    ALFA DE CRONBACH      ##################
#############################################
#Calculamos las alphas
Cronbach_general <- alpha(Datos); Cronbach_general
# 0.82
Cronbach_Eje1 <- alpha(D_E1); Cronbach_Eje1
# 0.67
Cronbach_Eje2 <- alpha(D_E2); Cronbach_Eje2
# 0.59
Cronbach_Eje3 <- alpha(D_E3); Cronbach_Eje3
# 0.54
Eje_1_1 <- factanal(D_E1, factors = 1, method = "mle") ; Eje_1_1
########################################################
# Estimacion del modelo DINA para la aplicación de la prueba
# PLANEA ELCE 2015 con las especificaciones del modelo
# empleadas por el Dr. Guaner Rojas para la prueba PLANEA 06
#
#Se incluye también una versión más "rigida" del modelo
#############################################################
rm(list=ls())                       #
library("CDM")
setwd("C:/Users/Alejandro/Desktop/afchavez19/RIMEDIE/Mat09_2015")
Respuestas <- read.csv("PLANEA.09.2015_IDENT_ITEMS.csv")
Respuestas$ESCUELA <- NULL
Respuestas$ID_ENT <- NULL
Respuestas$NOM_ENT <- NULL
Respuestas$ID_SERV <- NULL    #Se eliminan las columnas innecesarias
Respuestas$SERV <- NULL
Respuestas$MARGINC <- NULL
Respuestas$TAM_LOC_SEC <- NULL
Respuestas$SEXO <- NULL
Respuestas$EDAD_AC <- NULL
Respuestas$MES_NAC <- NULL
Respuestas$EDAD <- NULL
Respuestas$ï..ALUMNO <- NULL
Qmat <- read.csv("QMatriz_MAT09.csv")
#Se utiliza la Matriz Q para identificar los reactivos que corresponden a cada Eje
# para realizar la estimación independiente de cada Eje
Eje1 <- NULL
Eje2 <- NULL
Eje3 <- NULL
e1 <- 0
e2 <- 0
e3 <- 0
for(i in 1:nrow(Qmat)){
if(Qmat$Eje[i]=="3 - FEM"){
e3 <- e3 + 1
Eje3[e3] <- Qmat$Item[i]
}else{
if(Qmat$Eje[i]=="2 - MI"){
e2 <- e2+1
Eje2[e2] <- Qmat$Item[i]
}else{
e1 <- e1+1
Eje1[e1] <- Qmat$Item[i]
}}}
Qmat$Item <- NULL
Qmat$Cod_Ram <- NULL         #Se cancelan las columnas innecesarias de la MatrizQ
Qmat$Eje <- NULL
Q_E1 <- Qmat[Eje1,1:12]
Q_E2 <- Qmat[Eje2,13:22]
Q_E3 <- Qmat[Eje3,23:30]
R_E1 <- Respuestas[,Eje1]
R_E2 <- Respuestas[,Eje2]
R_E3 <- Respuestas[,Eje3]
#View(Qmat)
###########################################################
# DINA
#Modelo Rigido
#Modelo Laxo (recomendado por Dr. Guaner)
dino_1 <- din(R_E1, q.matr = Q_E1, rule = "DINO",
conv.crit = 0.01, maxit = 500, progress = TRUE)
dina_1 <- din(R_E1, q.matr = Q_E1, rule = "DINA",
conv.crit = 0.01, maxit = 500, progress = TRUE)
write.csv(dino_1$item, "E1SNPA_itemparameters_NO.csv")
write.csv(dino_1$skill.patt, "E1SNPA_skilpatterns_NO.csv")
write.csv(dino.frame(DINA_1$pattern), "E1SNPA_postpattern_NO.csv",row.names = F)
write.csv(dina_1$item, "E1SNPA_itempars_NA.csv")
write.csv(dina_1$skill.patt, "E1SNPA_skilpatt_NA.csv")
write.csv(data.frame(dina_1$pattern), "E1SNPA_fempostpattern_NA.csv",row.names = F)
#Modelo Rigido para el Eje 2
dino_2 <- din(R_E2, q.matr = Q_E2, rule = "DINO",
conv.crit = 0.01, maxit = 500, progress = TRUE)
#Modelo Laxo
dina_2 <- din(R_E2, q.matr = Q_E2, rule = "DINA",
conv.crit = 0.01, maxit = 500, progress = TRUE)
write.csv(dino_2$item, "E2MI_itemparameters_NO.csv")
write.csv(dino_2$skill.patt, "E2MI_skilpatterns_NO.csv")
write.csv(data.frame(dino_2$pattern), "E2MI_postpattern_NO.csv",row.names = F)
write.csv(dina_2$item, "E2MI_itempars_NA.csv")
write.csv(dina_2$skill.patt, "E2MI_skilpatt_NA.csv")
write.csv(data.frame(dina_2$pattern), "E2MI_minpostpattern_NA.csv", row.names = F)
#Modelo Rigido para el Eje 3
dino_3 <- din(R_E3, q.matr = Q_E3, rule = "DINO",
conv.crit = 0.01, maxit = 500, progress = TRUE)
dina_3 <- din(R_E3, q.matr = Q_E3, rule = "DINA",
conv.crit = 0.01, maxit = 500, progress = TRUE)
write.csv(dino_3$item, "E3FEM_itemparameters_NO.csv")
write.csv(dino_3$skill.patt, "E3FEM_skilpatterns_NO.csv")
write.csv(data.frame(dino_3$pattern), "E3FEM_postpattern_NO.csv",row.names = F)
write.csv(dina_3$item, "E3FEM_itempars_NA.csv")
write.csv(dina_3$skill.patt, "E3FEM_skilpatt_NA.csv")
write.csv(data.frame(dina_3$pattern), "E3FEM_spapostpattern_NA.csv",row.names = F)
#############################################################
rm(list=ls())                       #
library("CDM")
setwd("C:/Users/Alejandro/Desktop/afchavez19/RIMEDIE/Mat09_2015")
Respuestas <- read.csv("PLANEA.09.2015_IDENT_ITEMS.csv")
#############################################################
rm(list=ls())                       #
library("CDM")
setwd("C:/Users/Alejandro/Desktop/afchavez19/RIMEDIE/Mat09_2015/Inicial/DINAvsDINO")
Respuestas <- read.csv("PLANEA.09.2015_IDENT_ITEMS.csv")
Respuestas$ESCUELA <- NULL
Respuestas$ID_ENT <- NULL
Respuestas$NOM_ENT <- NULL
Respuestas$ID_SERV <- NULL    #Se eliminan las columnas innecesarias
Respuestas$SERV <- NULL
Respuestas$MARGINC <- NULL
Respuestas$TAM_LOC_SEC <- NULL
Respuestas$SEXO <- NULL
Respuestas$EDAD_AC <- NULL
Respuestas$MES_NAC <- NULL
Respuestas$EDAD <- NULL
Respuestas$ï..ALUMNO <- NULL
Qmat <- read.csv("QMatriz_MAT09.csv")
#Se utiliza la Matriz Q para identificar los reactivos que corresponden a cada Eje
# para realizar la estimación independiente de cada Eje
Eje1 <- NULL
Eje2 <- NULL
Eje3 <- NULL
e1 <- 0
e2 <- 0
e3 <- 0
for(i in 1:nrow(Qmat)){
if(Qmat$Eje[i]=="3 - FEM"){
e3 <- e3 + 1
Eje3[e3] <- Qmat$Item[i]
}else{
if(Qmat$Eje[i]=="2 - MI"){
e2 <- e2+1
Eje2[e2] <- Qmat$Item[i]
}else{
e1 <- e1+1
Eje1[e1] <- Qmat$Item[i]
}}}
Qmat$Item <- NULL
Qmat$Cod_Ram <- NULL         #Se cancelan las columnas innecesarias de la MatrizQ
Qmat$Eje <- NULL
Q_E1 <- Qmat[Eje1,1:12]
Q_E2 <- Qmat[Eje2,13:22]
Q_E3 <- Qmat[Eje3,23:30]
R_E1 <- Respuestas[,Eje1]
R_E2 <- Respuestas[,Eje2]
R_E3 <- Respuestas[,Eje3]
#View(Qmat)
###########################################################
# DINA
#Modelo Rigido
#Modelo Laxo (recomendado por Dr. Guaner)
dino_1 <- din(R_E1, q.matr = Q_E1, rule = "DINO",
conv.crit = 0.01, maxit = 500, progress = TRUE)
dina_1 <- din(R_E1, q.matr = Q_E1, rule = "DINA",
conv.crit = 0.01, maxit = 500, progress = TRUE)
dino_1$AIC
dino_1$BIC
rm(list=ls())                       #
library("CDM")
setwd("C:/Users/Alejandro/Desktop/afchavez19/RIMEDIE/Mat09_2015/Inicial/DINAvsDINO")
########################################################
# Estimacion del modelo DINA para la aplicación de la prueba
# PLANEA ELCE 2015 con las especificaciones del modelo
# empleadas por el Dr. Guaner Rojas para la prueba PLANEA 06
#
#Se incluye también una versión más "rigida" del modelo
#############################################################
rm(list=ls())                       #
library("CDM")
setwd("C:/Users/Alejandro/Desktop/afchavez19/RIMEDIE/Mat09_2015/Inicial/DINAvsDINO")
Respuestas <- read.csv("PLANEA.09.2015_IDENT_ITEMS.csv")
Respuestas$ESCUELA <- NULL
Respuestas$ID_ENT <- NULL
Respuestas$NOM_ENT <- NULL
Respuestas$ID_SERV <- NULL    #Se eliminan las columnas innecesarias
Respuestas$SERV <- NULL
Respuestas$MARGINC <- NULL
Respuestas$TAM_LOC_SEC <- NULL
Respuestas$SEXO <- NULL
Respuestas$EDAD_AC <- NULL
Respuestas$MES_NAC <- NULL
Respuestas$EDAD <- NULL
Respuestas$ï..ALUMNO <- NULL
Qmat <- read.csv("QMatriz_MAT09.csv")
#Se utiliza la Matriz Q para identificar los reactivos que corresponden a cada Eje
# para realizar la estimación independiente de cada Eje
Eje1 <- NULL
Eje2 <- NULL
Eje3 <- NULL
e1 <- 0
e2 <- 0
e3 <- 0
for(i in 1:nrow(Qmat)){
if(Qmat$Eje[i]=="3 - FEM"){
e3 <- e3 + 1
Eje3[e3] <- Qmat$Item[i]
}else{
if(Qmat$Eje[i]=="2 - MI"){
e2 <- e2+1
Eje2[e2] <- Qmat$Item[i]
}else{
e1 <- e1+1
Eje1[e1] <- Qmat$Item[i]
}}}
Qmat$Item <- NULL
Qmat$Cod_Ram <- NULL         #Se cancelan las columnas innecesarias de la MatrizQ
Qmat$Eje <- NULL
Q_E1 <- Qmat[Eje1,1:12]
Q_E2 <- Qmat[Eje2,13:22]
Q_E3 <- Qmat[Eje3,23:30]
R_E1 <- Respuestas[,Eje1]
R_E2 <- Respuestas[,Eje2]
R_E3 <- Respuestas[,Eje3]
#View(Qmat)
dina_1 <- din(R_E1, q.matr = Q_E1, rule = "DINA",
conv.crit = 0.01, maxit = 500, progress = TRUE)
dina_1$AIC
dina_1$BIC
write.csv(dina_1$item, "E1SNPA_itempars_NA.csv")
write.csv(dina_1$skill.patt, "E1SNPA_skilpatt_NA.csv")
write.csv(data.frame(dina_1$pattern), "E1SNPA_fempostpattern_NA.csv",row.names = F)
