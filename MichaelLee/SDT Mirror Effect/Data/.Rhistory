Frate_B <- fa_B/160
Predicted_HRate_A <- Predicted_Ha/160
Predicted_HRate_B <- Predicted_Hb/160
Predicted_FRate_A <- Predicted_Fa/160
Predicted_FRate_B <- Predicted_Fb/160
# Hit Rates
plot(c(1:k), Hrate_A, col="white", pch=18, cex=2, ylim=c(.5,1),
axes=F, xlab="", ylab="")
points(c(1:k),Predicted_HRate_A, col="deepskyblue1", pch=15, cex=3)
points(c(1:k),Predicted_HRate_B, col="mediumorchid1", pch=15, cex=3)
points(c(1:k),Hrate_B, col="magenta4", pch=18, cex=2)
points(c(1:k),Hrate_A, col="royalblue3", pch=18, cex=2)
axis(1,c(1:20),c(1:20))
axis(2,seq(.5,1,.05),seq(.5,1,.05), line=-1)
mtext("Hit Rates", side=2, line = 2, cex=1.5, las=0)
mtext("Participant", side=1, line = 2.5, cex=1, font=2)
mtext(paste("Predicted vs Observed Hit Rates - Experiment No.", Exp), font=2, cex=2, side=3)
numero <- 0
linea <- 1.5
for(u in 1:k){
numero <- numero + 1
if(u<8){
lines(c(linea,linea),c(0.62,1), lty=2)
}else{
lines(c(linea,linea),c(0.5,1), lty=2)}
linea <- linea+1
}
points(1.8,.6, col="deepskyblue1", pch=15, cex=3)
points(1.8,.57, col="mediumorchid1", pch=15, cex=3)
points(1.8,.54, col="magenta4", pch=18, cex=2)
points(1.8,.51, col="royalblue3", pch=18, cex=2)
text(5.1,.6, "Prior prediction for the Hit rates - A Class", f=2)
text(5.1,.57, "Prior prediction for the Hit rates - B Class", f=2)
text(4.5,.54, "Observed number of Hits - A Class", f=2)
text(4.5,.51, "Observed number of Hits - B Class", f=2)
# Total number of False Alarms
plot(c(1:k), Frate_B, col="white", pch=18, cex=2, ylim=c(0,.5),
axes=F, xlab="", ylab="")
points(c(1:k),Predicted_FRate_A, col="deepskyblue1", pch=15, cex=3)
points(c(1:k),Predicted_FRate_B, col="mediumorchid1", pch=15, cex=3)
points(c(1:k),Frate_B, col="magenta4", pch=18, cex=2)
points(c(1:k),Frate_A, col="royalblue3", pch=18, cex=2)
axis(1,c(1:20),c(1:20))
axis(2,seq(0,0.5,.05),seq(0,0.5,.05), line=-1)
mtext("False Alarm Rate", side=2, line = 2, cex=1.5, las=0)
mtext("Participant", side=1, line = 2.5, cex=1, font=2)
mtext(paste("Predicted vs Observed number of False Alarms - Experiment No.", Exp), font=2, cex=2, side=3)
numero <- 0
linea <- 1.5
for(u in 1:k){
numero <- numero + 1
if(u>12){
lines(c(linea,linea),c(0,0.4), lty=2)
}else{
lines(c(linea,linea),c(0,0.5), lty=2)}
linea <- linea+1
}
points(13.8,.49, col="deepskyblue1", pch=15, cex=3)
points(13.8,.47, col="mediumorchid1", pch=15, cex=3)
points(13.8,.45, col="magenta4", pch=18, cex=2)
points(13.8,.43, col="royalblue3", pch=18, cex=2)
text(17.1,.49, "Prior prediction for the F.A. rates - A Class", f=2)
text(17.1,.47, "Prior prediction for the F.A. rates - B Class", f=2)
text(16.5,.45, "Observed number of Hits - A Class", f=2)
text(16.5,.43, "Observed number of Hits - B Class", f=2)
###########################
setwd("C:/Users/Alejandro/Desktop/afchavez19/MichaelLee/SDT Mirror Effect/Data")
rm(list=ls())
dir()
library(R2jags)
##############################################################
##############################################################
#Diferencias en Hits y Falsas Alarmas
#Modelo 1 :  Diferencias entre las Tasas H y FA (parametros TauH y TauF)
#            contra datos generados usando las priors
##############################################################
######################################################
#Especificamos el Experimento y los Datos a analizar
experimento <- 1
###################
if (experimento == 1)    #Una Figura de Ebbinghaus
{
exp <- 1
archive <-'Ex_1Ebb_TODOS.csv'         #El archivo que contiene los datos
datos <- read.csv(archive)          #Jalamos los datos del archivo
}
if (experimento == 2)   # Dos Figuras de Ebbinghaus
{
exp <- 2
archive <-'Ex_2Ebb_TODOS_Sin1.csv'  #El archivo que contiene los datos
datos <- read.csv(archive)          #Jalamos los datos
}
h_A <- datos$A_H       #Hits(A)
h_B <- datos$B_H     #Hits(B)
fa_A <- datos$A_FA        #FA(A)
fa_B <- datos$B_FA      #FA(B)
k <- 20                       #Participantes
s <- 160       #Ensayos con SeÃ±al
n <- 160       #Ensayos con Ruido
############################################################################
############################################################################
#Escribimos el modelo Inicial
############################################################################
write('
model{
#Posterior estimations (based on the data collected)
for (i in 1:k){
# Posterior density based on our data
h_A[i] ~ dbin(thetah_A[i],s)
fa_A[i] ~ dbin(thetaf_A[i],n)
h_B[i] ~ dbin(thetah_B[i],s)
fa_B[i] ~ dbin(thetaf_B[i],n)
# Reparameterization Using Equal-Variance Gaussian SDT
thetah_A[i] <- phi(d_A[i]/2-c_A[i])
thetaf_A[i] <- phi(-d_A[i]/2-c_A[i])
thetah_B[i] <- phi(d_B[i]/2-c_B[i])
thetaf_B[i] <- phi(-d_B[i]/2-c_B[i])
# These Priors over Discriminability and Bias Correspond
# to Uniform Priors over the Hit and False Alarm Rates
d_A[i] ~ dnorm(mud_A,sigmad_A)
c_A[i] ~ dnorm(muc_A,sigmac_A)
d_B[i] ~ dnorm(mud_B,sigmad_B)
c_B[i] ~ dnorm(muc_B,sigmac_B)
Tau_H[i] <- thetah_A[i]-thetah_B[i]
Tau_F[i] <- thetaf_B[i]-thetaf_A[i]}
#Hierarchical Structure
mud_A <- MuD + delta_D/2
mud_B <- MuD - delta_D/2
lambdad_A ~ dgamma(.001,.001)
lambdad_B ~ dgamma(.001,.001)
sigmad_A <- 1/sqrt(lambdad_A)
sigmad_B <- 1/sqrt(lambdad_B)
delta_D ~ dnorm(0,1)T(0,6)
MuD ~ dnorm(0,1)T(0,6)
muc_A <- MuC + delta_C/2
muc_B <- MuC - delta_C/2
lambdac_A ~ dgamma(.001,.001)
lambdac_B ~ dgamma(.001,.001)
sigmac_A <- 1/sqrt(lambdac_A)
sigmac_B <- 1/sqrt(lambdac_B)
delta_C ~ dnorm(0,0.7)
MuC ~ dnorm(0,0.7)
#Plain priors for drawing prior predictions
for (i in 1:k){
prior_h_A[i] ~ dbin(Pr_thetah_A[i],s)
prior_fa_A[i] ~ dbin(Pr_thetaf_A[i],n)
prior_h_B[i] ~ dbin(Pr_thetah_B[i],s)
prior_fa_B[i] ~ dbin(Pr_thetaf_B[i],n)
# Reparameterization Using Equal-Variance Gaussian SDT
Pr_thetah_A[i] <- phi(Pr_d_A[i]/2-Pr_c_A[i])
Pr_thetaf_A[i] <- phi(-Pr_d_A[i]/2-Pr_c_A[i])
Pr_thetah_B[i] <- phi(Pr_d_B[i]/2-Pr_c_B[i])
Pr_thetaf_B[i] <- phi(-Pr_d_B[i]/2-Pr_c_B[i])
# These Priors over Discriminability and Bias Correspond
# to Uniform Priors over the Hit and False Alarm Rates
Pr_d_A[i] ~ dnorm(Pr_mud_A,Pr_sigmad_A)
Pr_c_A[i] ~ dnorm(Pr_muc_A,Pr_sigmac_A)
Pr_d_B[i] ~ dnorm(Pr_mud_B,Pr_sigmad_B)
Pr_c_B[i] ~ dnorm(Pr_muc_B,Pr_sigmac_B)
#Differences on dprime
PRIOR_Tau_H[i] <- Pr_thetah_A[i]-Pr_thetah_B[i]
PRIOR_Tau_F[i] <- Pr_thetaf_B[i]-Pr_thetaf_A[i]
}
#Hierarchical Structure
Pr_mud_A <- Pr_MuD + Pr_delta_D/2
Pr_mud_B <- Pr_MuD - Pr_delta_D/2
Pr_lambdad_A ~ dgamma(.001,.001)T(0.01,5)
Pr_lambdad_B ~ dgamma(.001,.001)T(0.01,5)
Pr_sigmad_A <- 1/sqrt(Pr_lambdad_A)
Pr_sigmad_B <- 1/sqrt(Pr_lambdad_B)
Pr_delta_D ~ dnorm(0,1)T(0,6)
Pr_MuD ~ dnorm(0,1)T(0,6)
Pr_muc_A <- Pr_MuC + Pr_delta_C/2
Pr_muc_B <- Pr_MuC - Pr_delta_C/2
Pr_lambdac_A ~ dgamma(.001,.001)T(0.01,5)
Pr_lambdac_B ~ dgamma(.001,.001)T(0.01,5)
Pr_sigmac_A <- 1/sqrt(Pr_lambdac_A)
Pr_sigmac_B <- 1/sqrt(Pr_lambdac_B)
Pr_delta_C ~ dnorm(0,0.7)
Pr_MuC ~ dnorm(0,0.7)}','Tau-All.bug')
######################################
######################################
# Definimos los elementos de trabajo
######################################
data <- list("fa_A", "fa_B", "h_B", "h_A", "s", "n", "k")                    #Los datos que vamos a utilizar para nuestro modelo
myinits <- list(
list(lambdad_A = 1,  lambdad_B = 1, delta_D = 1, MuD = 1,
lambdac_A = 1,  lambdac_B = 1, delta_C = 1, MuC = 1,
Pr_lambdad_A = 1,  Pr_lambdad_B = 1, Pr_delta_D = 1, Pr_MuD = 1,
Pr_lambdac_A = 1,  Pr_lambdac_B = 1, Pr_delta_C = 1, Pr_MuC = 1))
#ParÃ¡metros monitoreados
parameters <- c("d_A", "c_A", "thetah_A", "thetaf_A",
"d_B", "c_B", "thetah_B", "thetaf_B",
"Tau_H", "Tau_F",
"mud_A", "mud_B","muc_A", "muc_B",
"sigmad_A",  "sigmad_B", "delta_D", "MuD",
"sigmac_A",  "sigmac_B", "delta_C", "MuC",
"Pr_d_A", "Pr_c_A", "Pr_thetah_A", "Pr_thetaf_A",
"Pr_d_B", "Pr_c_B", "Pr_thetah_B", "Pr_thetaf_B",
"PRIOR_Tau_H", "PRIOR_Tau_F",
"Pr_mud_A", "Pr_mud_B","Pr_muc_A", "Pr_muc_B",
"prior_h_A", "prior_h_B", "prior_fa_A", "prior_fa_B",
"Pr_sigmad_A", "Pr_sigmad_B", "Pr_delta_D", "Pr_MuD",
"Pr_sigmac_A", "Pr_sigmac_B", "Pr_delta_C", "Pr_MuC",
"lambdac_A","lambdac_B","lambdad_A","lambdad_B",
"Pr_lambdac_A","Pr_lambdac_B","Pr_lambdad_A","Pr_lambdad_B")
niter <- 50000    #Iteraciones
burnin <- 5000     #No. de primeros sampleos en ignorarse
#Corremos el modelo
samples <- jags(data, inits=myinits, parameters,
model.file ="Tau-All.bug",
n.chains=1, n.iter=niter, n.burnin=burnin, n.thin=1)
####################################################################
# Jalamos los resultados de correr el modelo (Inferencias)
# a.k.a.:
#Le ponemos una etiqueta a cada elemento contenido en Samples
####################################################################
d_a <- samples$BUGSoutput$sims.list$d_A
d_b <- samples$BUGSoutput$sims.list$d_B
c_a <- samples$BUGSoutput$sims.list$c_A
c_b <- samples$BUGSoutput$sims.list$c_B
muDA <- samples$BUGSoutput$sims.list$mud_A
muDB <- samples$BUGSoutput$sims.list$mud_B
muD <- samples$BUGSoutput$sims.list$MuD
DeltaD <- samples$BUGSoutput$sims.list$delta_D
muCA <- samples$BUGSoutput$sims.list$muc_A
muCB <- samples$BUGSoutput$sims.list$muc_B
muC <- samples$BUGSoutput$sims.list$MuC
DeltaC <- samples$BUGSoutput$sims.list$delta_C
tetaH_a <- samples$BUGSoutput$sims.list$thetah_A
tetaH_b <- samples$BUGSoutput$sims.list$thetah_B
tetaFA_a <- samples$BUGSoutput$sims.list$thetaf_A
tetaFA_b <- samples$BUGSoutput$sims.list$thetaf_B
tauH <- samples$BUGSoutput$sims.list$Tau_H
tauF <- samples$BUGSoutput$sims.list$Tau_F
#Prior predictiva
Pr_d_a <- samples$BUGSoutput$sims.list$Pr_d_A
Pr_d_b <- samples$BUGSoutput$sims.list$Pr_d_B
Pr_c_a <- samples$BUGSoutput$sims.list$Pr_c_A
Pr_c_b <- samples$BUGSoutput$sims.list$Pr_c_B
Pr_muDA <- samples$BUGSoutput$sims.list$Pr_mud_A
Pr_muDB <- samples$BUGSoutput$sims.list$Pr_mud_B
Pr_muD <- samples$BUGSoutput$sims.list$Pr_MuD
Pr_DeltaD <- samples$BUGSoutput$sims.list$Pr_delta_D
Pr_muCA <- samples$BUGSoutput$sims.list$Pr_muc_A
Pr_muCB <- samples$BUGSoutput$sims.list$Pr_muc_B
Pr_muC <- samples$BUGSoutput$sims.list$Pr_MuC
Pr_DeltaC <- samples$BUGSoutput$sims.list$Pr_delta_C
Pr_Ha <- samples$BUGSoutput$sims.list$prior_h_A
Pr_Hb <- samples$BUGSoutput$sims.list$prior_h_B
Pr_Fa <- samples$BUGSoutput$sims.list$prior_fa_A
Pr_Fb <- samples$BUGSoutput$sims.list$prior_fa_B
Pr_tetaH_a <- samples$BUGSoutput$sims.list$Pr_thetah_A
Pr_tetaH_b <- samples$BUGSoutput$sims.list$Pr_thetah_B
Pr_tetaFA_a <- samples$BUGSoutput$sims.list$Pr_thetaf_A
Pr_tetaFA_b <- samples$BUGSoutput$sims.list$Pr_thetaf_B
Pr_tauH <- samples$BUGSoutput$sims.list$PRIOR_Tau_H
Pr_tauF <- samples$BUGSoutput$sims.list$PRIOR_Tau_F
Predicted_Ha <- NULL
Predicted_Hb <- NULL
Predicted_Fa <- NULL
Predicted_Fb <- NULL
for(i in 1:k){
Predicted_Ha[i] <- round(median(density(Pr_Ha[,i])$x[which(density(Pr_Ha[,i])$y==max(density(Pr_Ha[,i])$y))-rbinom(1,10,.5)]),0)
Predicted_Hb[i] <- round(median(density(Pr_Hb[,i])$x[which(density(Pr_Hb[,i])$y==max(density(Pr_Hb[,i])$y))-rbinom(1,10,.5)]),0)
Predicted_Fa[i] <- round(median(density(Pr_Fa[,i])$x[which(density(Pr_Fa[,i])$y==max(density(Pr_Fa[,i])$y))+rbinom(1,10,.5)]),0)
Predicted_Fb[i] <- round(median(density(Pr_Fb[,i])$x[which(density(Pr_Fb[,i])$y==max(density(Pr_Fb[,i])$y))+rbinom(1,10,.5)]),0)
}
############################################################################
############################################################################
#Escribimos nuevamente el modelo para obtener estimados basados en las Priors
############################################################################
write('
model{
for (i in 1:k){
# Prior predicted counts
Predicted_Ha[i] ~ dbin(PPr_thetah_A[i],s)
Predicted_Fa[i] ~ dbin(PPr_thetaf_A[i],n)
Predicted_Hb[i] ~ dbin(PPr_thetah_B[i],s)
Predicted_Fb[i] ~ dbin(PPr_thetaf_B[i],n)
# Reparameterization Using Equal-Variance Gaussian SDT
PPr_thetah_A[i] <- phi(PPr_d_A[i]/2-PPr_c_A[i])
PPr_thetaf_A[i] <- phi(-PPr_d_A[i]/2-PPr_c_A[i])
PPr_thetah_B[i] <- phi(PPr_d_B[i]/2-PPr_c_B[i])
PPr_thetaf_B[i] <- phi(-PPr_d_B[i]/2-PPr_c_B[i])
# These Priors over Discriminability and Bias Correspond
# to Uniform Priors over the Hit and False Alarm Rates
PPr_d_A[i] ~ dnorm(PPr_mud_A,PPr_sigmad_A)
PPr_c_A[i] ~ dnorm(PPr_mud_A,PPr_sigmad_A)
PPr_d_B[i] ~ dnorm(PPr_mud_A,PPr_sigmad_A)
PPr_c_B[i] ~ dnorm(PPr_mud_A,PPr_sigmad_A)
#Differences on dprime
PPRIOR_Tau_H[i] <- PPr_thetah_A[i]-PPr_thetah_B[i]
PPRIOR_Tau_F[i] <- PPr_thetaf_B[i]-PPr_thetaf_A[i]
}
#Hierarchical Structure
PPr_mud_A <- PPr_MuD + PPr_delta_D/2
PPr_mud_B <- PPr_MuD - PPr_delta_D/2
PPr_lambdad_A ~ dgamma(.001,.001)T(0.01,5)
PPr_lambdad_B ~ dgamma(.001,.001)T(0.01,5)
PPr_sigmad_A <- 1/sqrt(PPr_lambdad_A)
PPr_sigmad_B <- 1/sqrt(PPr_lambdad_B)
PPr_delta_D ~ dnorm(0,1)T(0,6)
PPr_MuD ~ dnorm(0,1)T(0,6)
PPr_muc_A <- PPr_MuC + PPr_delta_C/2
PPr_muc_B <- PPr_MuC - PPr_delta_C/2
PPr_lambdac_A ~ dgamma(.001,.001)T(0.01,5)
PPr_lambdac_B ~ dgamma(.001,.001)T(0.01,5)
PPr_sigmac_A <- 1/sqrt(PPr_lambdac_A)
PPr_sigmac_B <- 1/sqrt(PPr_lambdac_B)
PPr_delta_C ~ dnorm(0,0.7)
PPr_MuC ~ dnorm(0,0.7)}','Tau-All_predictive.bug')
######################################
######################################
# Definimos los elementos de trabajo
######################################
data <- list("Predicted_Ha", "Predicted_Hb", "Predicted_Fa", "Predicted_Fb", "s", "n", "k")
#Los datos que vamos a utilizar para nuestro modelo
myinits <- list(
list(PPr_d_A = rep(0,k), PPr_c_A = rep(0,k), PPr_d_B = rep(0,k),
PPr_c_B = rep(0,k), PPr_lambdad_A = 1,  PPr_lambdad_B = 1,
PPr_delta_D = 0, PPr_MuD = 0, PPr_lambdac_A = 1,  PPr_lambdac_B = 1,
PPr_delta_C = 0, PPr_MuC = 0))
#Valores iniciales para las extracciones de las cadenas de Markov
#ParÃ¡metros monitoreados
parameters <- c("PPr_d_A", "PPr_c_A", "PPr_d_B", "PPr_c_B", "PPr_sigmad_A",
"PPr_sigmad_B", "PPr_delta_D", "PPr_MuD", "PPr_sigmac_A",
"PPr_sigmac_B", "PPr_delta_C", "PPr_MuC")
niter <- 100000    #Iteraciones
burnin <- 5000     #No. de primeros sampleos en ignorarse
#Corremos el modelo
samples <- jags(data, inits=myinits, parameters,
model.file ="Tau-All_predictive.bug",
n.chains=1, n.iter=niter, n.burnin=burnin, n.thin=1)
####################################################################
# Jalamos los resultados de correr el modelo (Inferencias)
# a.k.a.:
#Le ponemos una etiqueta a cada elemento contenido en Samples
####################################################################
#Prior predictiva
PPr_d_a <- samples$BUGSoutput$sims.list$PPr_d_A
PPr_d_b <- samples$BUGSoutput$sims.list$PPr_d_B
PPr_c_a <- samples$BUGSoutput$sims.list$PPr_c_A
PPr_c_b <- samples$BUGSoutput$sims.list$PPr_c_B
PPr_muDA <- samples$BUGSoutput$sims.list$PPr_mud_A
PPr_muDB <- samples$BUGSoutput$sims.list$PPr_mud_B
PPr_muD <- samples$BUGSoutput$sims.list$PPr_MuD
PPr_DeltaD <- samples$BUGSoutput$sims.list$PPr_delta_D
PPr_muCA <- samples$BUGSoutput$sims.list$PPr_muc_A
PPr_muCB <- samples$BUGSoutput$sims.list$PPr_muc_B
PPr_muC <- samples$BUGSoutput$sims.list$PPr_MuC
PPr_DeltaC <- samples$BUGSoutput$sims.list$PPr_delta_C
PPr_tetaH_a <- samples$BUGSoutput$sims.list$PPr_thetah_A
PPr_tetaH_b <- samples$BUGSoutput$sims.list$PPr_thetah_B
PPr_tetaFA_a <- samples$BUGSoutput$sims.list$PPr_thetaf_A
PPr_tetaFA_b <- samples$BUGSoutput$sims.list$PPr_thetaf_B
PPr_tauH <- samples$BUGSoutput$sims.list$PPRIOR_Tau_H
PPr_tauF <- samples$BUGSoutput$sims.list$PPRIOR_Tau_F
##########################################################
##########################################################
##########################################################
################## DRAWING PLOTS
##########################################################
###################################################################################
# Paneles separados
# Las posteriores de los parÃ¡metros INDVIDUALES estimados (D'y C; ThetaH y ThetaFA)
###################################################################################
layout(matrix(1,ncol=1))  #Dos paneles
soporte_d <- c(0,3)
soporte_c <- c(0,6)
if (experimento ==1){
soporte_h <- c(0,70)
soporte_f <- c(0,60)
Exp <- 1}else{
soporte_h <- c(0,62)
soporte_f <- c(0,25)
Exp <- 2
}
##########################
# Predicted vs Observed Total Counts
################################
# Total number of Hits
plot(c(1:k), h_A, col="white", pch=18, cex=2, ylim=c(80,160),
axes=F, xlab="", ylab="")
points(c(1:k),Predicted_Ha, col="deepskyblue1", pch=15, cex=3)
points(c(1:k),Predicted_Hb, col="mediumorchid1", pch=15, cex=3)
points(c(1:k),h_B, col="magenta4", pch=18, cex=2)
points(c(1:k),h_A, col="royalblue3", pch=18, cex=2)
axis(1,c(1:20),c(1:20))
axis(2,seq(80,160,5),seq(80,160,5), line=-1)
mtext("Total number of Hits", side=2, line = 2, cex=1.5, las=0)
mtext("Participant", side=1, line = 2.5, cex=1, font=2)
mtext(paste("Predicted vs Observed number of Hits - Experiment No.", Exp), font=2, cex=2, side=3)
numero <- 0
linea <- 1.5
for(u in 1:k){
numero <- numero + 1
if(u<9){
lines(c(linea,linea),c(101,160), lty=2)
}else{
lines(c(linea,linea),c(80,160), lty=2)}
linea <- linea+1
}
points(1.8,97, col="deepskyblue1", pch=15, cex=3)
points(1.8,92, col="mediumorchid1", pch=15, cex=3)
points(1.8,87, col="magenta4", pch=18, cex=2)
points(1.8,82, col="royalblue3", pch=18, cex=2)
text(5.5,97, "Prior prediction for the number of Hits - A Class", f=2)
text(5.5,92, "Prior prediction for the number of Hits - B Class", f=2)
text(4.5,87, "Observed number of Hits - A Class", f=2)
text(4.5,82, "Observed number of Hits - B Class", f=2)
# Total number of False Alarms
plot(c(1:k), h_A, col="white", pch=18, cex=2, ylim=c(0,80),
axes=F, xlab="", ylab="")
points(c(1:k),Predicted_Fa, col="deepskyblue1", pch=15, cex=3)
points(c(1:k),Predicted_Fb, col="mediumorchid1", pch=15, cex=3)
points(c(1:k),fa_B, col="magenta4", pch=18, cex=2.5)
points(c(1:k),fa_A, col="royalblue3", pch=18, cex=2)
axis(1,c(1:20),c(1:20))
axis(2,seq(0,80,5),seq(0,80,5), line=-1)
mtext("Total number of False Alarms", side=2, line = 2, cex=1.5, las=0)
mtext("Participant", side=1, line = 2.5, cex=1, font=2)
mtext(paste("Predicted vs Observed number of False Alarms - Experiment No.", Exp), font=2, cex=2, side=3)
numero <- 0
linea <- 1.5
for(u in 1:k){
numero <- numero + 1
if(u>12){
lines(c(linea,linea),c(0,60), lty=2)
}else{
lines(c(linea,linea),c(0,80), lty=2)}
linea <- linea+1
}
points(12.8,78, col="deepskyblue1", pch=15, cex=3)
points(12.8,73, col="mediumorchid1", pch=15, cex=3)
points(12.8,68, col="magenta4", pch=18, cex=2)
points(12.8,63, col="royalblue3", pch=18, cex=2)
text(16.5,78, "Prior prediction for the number of Hits - A Class", f=2)
text(16.5,73, "Prior prediction for the number of Hits - B Class", f=2)
text(15.5,68, "Observed number of Hits - A Class", f=2)
text(15.5,63, "Observed number of Hits - B Class", f=2)
##########################
# Predicted vs Observed Rates
################################
Hrate_A <- h_A/160
Hrate_B <- h_B/160
Frate_A <- fa_A/160
Frate_B <- fa_B/160
Predicted_HRate_A <- Predicted_Ha/160
Predicted_HRate_B <- Predicted_Hb/160
Predicted_FRate_A <- Predicted_Fa/160
Predicted_FRate_B <- Predicted_Fb/160
# Hit Rates
plot(c(1:k), Hrate_A, col="white", pch=18, cex=2, ylim=c(.5,1),
axes=F, xlab="", ylab="")
points(c(1:k),Predicted_HRate_A, col="deepskyblue1", pch=15, cex=3)
points(c(1:k),Predicted_HRate_B, col="mediumorchid1", pch=15, cex=3)
points(c(1:k),Hrate_B, col="magenta4", pch=18, cex=2)
points(c(1:k),Hrate_A, col="royalblue3", pch=18, cex=2)
axis(1,c(1:20),c(1:20))
axis(2,seq(.5,1,.05),seq(.5,1,.05), line=-1)
mtext("Hit Rates", side=2, line = 2, cex=1.5, las=0)
mtext("Participant", side=1, line = 2.5, cex=1, font=2)
mtext(paste("Predicted vs Observed Hit Rates - Experiment No.", Exp), font=2, cex=2, side=3)
numero <- 0
linea <- 1.5
for(u in 1:k){
numero <- numero + 1
if(u<8){
lines(c(linea,linea),c(0.62,1), lty=2)
}else{
lines(c(linea,linea),c(0.5,1), lty=2)}
linea <- linea+1
}
points(1.8,.6, col="deepskyblue1", pch=15, cex=3)
points(1.8,.57, col="mediumorchid1", pch=15, cex=3)
points(1.8,.54, col="magenta4", pch=18, cex=2)
points(1.8,.51, col="royalblue3", pch=18, cex=2)
text(5.1,.6, "Prior prediction for the Hit rates - A Class", f=2)
text(5.1,.57, "Prior prediction for the Hit rates - B Class", f=2)
text(4.5,.54, "Observed number of Hits - A Class", f=2)
text(4.5,.51, "Observed number of Hits - B Class", f=2)
# Total number of False Alarms
plot(c(1:k), Frate_B, col="white", pch=18, cex=2, ylim=c(0,.5),
axes=F, xlab="", ylab="")
points(c(1:k),Predicted_FRate_A, col="deepskyblue1", pch=15, cex=3)
points(c(1:k),Predicted_FRate_B, col="mediumorchid1", pch=15, cex=3)
points(c(1:k),Frate_B, col="magenta4", pch=18, cex=2)
points(c(1:k),Frate_A, col="royalblue3", pch=18, cex=2)
axis(1,c(1:20),c(1:20))
axis(2,seq(0,0.5,.05),seq(0,0.5,.05), line=-1)
mtext("False Alarm Rate", side=2, line = 2, cex=1.5, las=0)
mtext("Participant", side=1, line = 2.5, cex=1, font=2)
mtext(paste("Predicted vs Observed number of False Alarms - Experiment No.", Exp), font=2, cex=2, side=3)
numero <- 0
linea <- 1.5
for(u in 1:k){
numero <- numero + 1
if(u>12){
lines(c(linea,linea),c(0,0.4), lty=2)
}else{
lines(c(linea,linea),c(0,0.5), lty=2)}
linea <- linea+1
}
points(13.8,.49, col="deepskyblue1", pch=15, cex=3)
points(13.8,.47, col="mediumorchid1", pch=15, cex=3)
points(13.8,.45, col="magenta4", pch=18, cex=2)
points(13.8,.43, col="royalblue3", pch=18, cex=2)
text(17.1,.49, "Prior prediction for the F.A. rates - A Class", f=2)
text(17.1,.47, "Prior prediction for the F.A. rates - B Class", f=2)
text(16.5,.45, "Observed number of Hits - A Class", f=2)
text(16.5,.43, "Observed number of Hits - B Class", f=2)
