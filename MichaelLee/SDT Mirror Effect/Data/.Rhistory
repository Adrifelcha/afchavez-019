setwd("C:/Users/Sandra/Desktop/afchavez-019/MichaelLee/SDT Mirror Effect/Data")
rm(list=ls())
dir()
library(R2jags)
install.packages("R2jags")
setwd("C:/Users/Sandra/Desktop/afchavez-019/MichaelLee/SDT Mirror Effect/Data")
rm(list=ls())
dir()
library(R2jags)
##############################################################
##############################################################
#Dif
setwd("C:/Users/Sandra/Desktop/afchavez-019/MichaelLee/SDT Mirror Effect/Data")
rm(list=ls())
dir()
library(R2jags)
##############################################################
##############################################################
#Diferencias en Hits y Falsas Alarmas
##############################################################
#Modelo 1 :  Diferencias entre las Tasas H y FA (parametros TauH y TauF)
##############################################################
######################################################
#Especificamos el Experimento y los Datos a analizar
experimento <- 2
#####################################################
if (experimento == 1)    #Una Figura de Ebbinghaus
{
exp <- 1
archive <-'Ex_1Ebb_TODOS.csv'         #El archivo que contiene los datos
datos <- read.csv(archive)          #Jalamos los datos del archivo
}
if (experimento == 2)   # Dos Figuras de Ebbinghaus
{
exp <- 2
archive <-'Ex_2Ebb_TODOS_Sin1.csv'  #El archivo que contiene los datos
datos <- read.csv(archive)          #Jalamos los datos
}
h_A <- datos$A_H       #Hits(A)
h_B <- datos$B_H     #Hits(B)
fa_A <- datos$A_FA        #FA(A)
fa_B <- datos$B_FA      #FA(B)
k <- 20                       #Participantes
s <- 160       #Ensayos con Señal
n <- 160       #Ensayos con Ruido
######################################
######################################
#Escribimos el modelo
######################################
write('
model{
for (i in 1:k){
# Observed counts
h_A[i] ~ dbin(thetah_A[i],s)
fa_A[i] ~ dbin(thetaf_A[i],n)
h_B[i] ~ dbin(thetah_B[i],s)
fa_B[i] ~ dbin(thetaf_B[i],n)
# Reparameterization Using Equal-Variance Gaussian SDT
thetah_A[i] <- phi(d_A[i]/2-c_A[i])
thetaf_A[i] <- phi(-d_A[i]/2-c_A[i])
thetah_B[i] <- phi(d_B[i]/2-c_B[i])
thetaf_B[i] <- phi(-d_B[i]/2-c_B[i])
# These Priors over Discriminability and Bias Correspond
# to Uniform Priors over the Hit and False Alarm Rates
d_A[i] ~ dnorm(0,1)T(0,6)
c_A[i] ~ dnorm(0,0.7)
d_B[i] ~ dnorm(0,1)T(0,6)
c_B[i] ~ dnorm(0,0.7)
#Differences on dprime
Tau_H[i] <- thetah_A[i]-thetah_B[i]
Tau_F[i] <- thetaf_B[i]-thetaf_A[i]
}
#Predictive Priors
for (i in 1:k){
# Observed counts
prior_h_A[i] ~ dbin(Pr_thetah_A[i],s)
prior_fa_A[i] ~ dbin(Pr_thetaf_A[i],n)
prior_h_B[i] ~ dbin(Pr_thetah_B[i],s)
prior_fa_B[i] ~ dbin(Pr_thetaf_B[i],n)
# Reparameterization Using Equal-Variance Gaussian SDT
Pr_thetah_A[i] <- phi(Pr_d_A[i]/2-Pr_c_A[i])
Pr_thetaf_A[i] <- phi(-Pr_d_A[i]/2-Pr_c_A[i])
Pr_thetah_B[i] <- phi(Pr_d_B[i]/2-Pr_c_B[i])
Pr_thetaf_B[i] <- phi(-Pr_d_B[i]/2-Pr_c_B[i])
# These Priors over Discriminability and Bias Correspond
# to Uniform Priors over the Hit and False Alarm Rates
Pr_d_A[i] ~ dnorm(0,1)T(0,6)
Pr_c_A[i] ~ dnorm(0,0.7)
Pr_d_B[i] ~ dnorm(0,1)T(0,6)
Pr_c_B[i] ~ dnorm(0,0.7)
#Differences on dprime
PRIOR_Tau_H[i] <- Pr_thetah_A[i]-Pr_thetah_B[i]
PRIOR_Tau_F[i] <- Pr_thetaf_B[i]-Pr_thetaf_A[i]
}}','Tau.bug')
######################################
######################################
# Definimos los elementos de trabajo
######################################
data <- list("fa_A", "fa_B", "h_B", "h_A", "s", "n", "k")                    #Los datos que vamos a utilizar para nuestro modelo
myinits <- list(
list(d_A = rep(0,k), c_A = rep(0,k), d_B = rep(0,k), c_B = rep(0,k),
Pr_d_A = rep(0,k), Pr_c_A = rep(0,k), Pr_d_B = rep(0,k), Pr_c_B = rep(0,k),
prior_h_A = rep(0.5,k), prior_h_B = rep(0.5,k), prior_fa_A = rep(0.5,k),prior_fa_B = rep(0.5,k)))      #Valores iniciales para las extracciones de las cadenas de Markov
#Parámetros monitoreados
parameters <- c("d_A", "c_A", "thetah_A", "thetaf_A", "d_B", "c_B", "thetah_B", "thetaf_B","Tau_H", "Tau_F",
"Pr_d_A", "Pr_c_A", "Pr_thetah_A", "Pr_thetaf_A", "Pr_d_B", "Pr_c_B", "Pr_thetah_B", "Pr_thetaf_B",
"PRIOR_Tau_H", "PRIOR_Tau_F","prior_h_A", "prior_h_B", "prior_fa_A", "prior_fa_B")
niter <- 100000    #Iteraciones
burnin <- 1000     #No. de primeros sampleos en ignorarse
#Corremos el modelo
samples <- jags(data, inits=myinits, parameters,
model.file ="Tau.bug",
n.chains=1, n.iter=niter, n.burnin=burnin, n.thin=1)
####################################################################
# Jalamos los resultados de correr el modelo (Inferencias)
# a.k.a.:
#Le ponemos una etiqueta a cada elemento contenido en Samples
####################################################################
d_a <- samples$BUGSoutput$sims.list$d_A
d_b <- samples$BUGSoutput$sims.list$d_B
c_a <- samples$BUGSoutput$sims.list$c_A
c_b <- samples$BUGSoutput$sims.list$c_B
tetaH_a <- samples$BUGSoutput$sims.list$thetah_A
tetaH_b <- samples$BUGSoutput$sims.list$thetah_B
tetaFA_a <- samples$BUGSoutput$sims.list$thetaf_A
tetaFA_b <- samples$BUGSoutput$sims.list$thetaf_B
tauH <- samples$BUGSoutput$sims.list$Tau_H
tauF <- samples$BUGSoutput$sims.list$Tau_F
#Prior predictiva
PPr_d_a <- samples$BUGSoutput$sims.list$Pr_d_A
PPr_d_b <- samples$BUGSoutput$sims.list$Pr_d_B
PPr_c_a <- samples$BUGSoutput$sims.list$Pr_c_A
PPr_c_b <- samples$BUGSoutput$sims.list$Pr_c_B
PPr_tetaH_a <- samples$BUGSoutput$sims.list$Pr_thetah_A
PPr_tetaH_b <- samples$BUGSoutput$sims.list$Pr_thetah_B
PPr_tetaFA_a <- samples$BUGSoutput$sims.list$Pr_thetaf_A
PPr_tetaFA_b <- samples$BUGSoutput$sims.list$Pr_thetaf_B
PPr_tauH <- samples$BUGSoutput$sims.list$PRIOR_Tau_H
PPr_tauF <- samples$BUGSoutput$sims.list$PRIOR_Tau_F
##########################################################
##########################################################
##########################################################
################## DRAWING PLOTS
##########################################################
###################################################################################
# Paneles separados
# Las posteriores de los parámetros INDVIDUALES estimados (D'y C; ThetaH y ThetaFA)
###################################################################################
layout(matrix(1,ncol=1))  #Dos paneles
soporte_d <- c(0,3)
soporte_c <- c(0,6)
if (experimento ==1){
soporte_h <- c(0,70)
soporte_f <- c(0,60)
Exp <- 1}else{
soporte_h <- c(0,62)
soporte_f <- c(0,25)
Exp <- 2
}
###############################
# DISCRIMINABBILITY (D'):
# Predictive Prior
plot(soporte_d, axes=F, main="", ylab="", xlab="", xlim=c(0,6), ylim=c(0,1), col='white')
for(a in 1:k){
lines(density(PPr_d_a[,a]), lwd=2.5, col="deepskyblue3")
lines(density(PPr_d_b[,a]), lwd=2.5, col="darkorchid3", lty=1)
axis(1)
axis(2, labels=F, at=c(0,24))
mtext("Predictive Prior density", side=2, line = 2, cex=1.5, las=0)
mtext("D-prime", side=1, line = 2.5, cex=1, font=2)}
mtext(paste("Predictive prior for D' - Experiment No.", Exp), font=2, cex=2, side=3)
#Posterior density
plot(soporte_d, axes=F, main="", ylab="", xlab="", xlim=c(0,6), ylim=c(0,3), col='white')
for(a in 1:k){
lines(density(d_a[,a]), lwd=2.5, col="deepskyblue3")
lines(density(d_b[,a]), lwd=2.5, col="darkorchid3", lty=1)
axis(1)
axis(2, labels=F, at=c(0,24))
mtext("Posterior density", side=2, line = 2, cex=1.5, las=0)
mtext("D-prime", side=1, line = 2.5, cex=1, font=2)}
mtext(paste("Posterior estimates for D' - Experiment No.", Exp), font=2, cex=2, side=3)
###############################
# BIAS (C):
# Predictive Prior
plot(soporte_c, main="", ylab="", xlab="", col='white', xlim=c(-1.5,1.5), axes=F,
ylim=c(0,0.5))
for(a in 1:k){
axis(1)
axis(2, labels=F, at=c(0,24))
lines(density(PPr_c_a[,a]), lwd=2.5, col="deepskyblue3")
lines(density(PPr_c_b[,a]), lwd=2.5, col="darkorchid3", lty=1)
mtext("Predictive Prior Density", side=2, line = 2, cex=1.5, las=0)
mtext("Bias - C", side=1, line = 2.5, cex=1, font=2)}
mtext(paste("Predictive Priors for C - Experiment No.", Exp), font=2, cex=2, side=3)
# Posterior density
plot(soporte_c, main="", ylab="", xlab="", col='white', xlim=c(-1.5,1.5), axes=F)
for(a in 1:k){
axis(1)
axis(2, labels=F, at=c(0,24))
lines(density(c_a[,a]), lwd=2.5, col="deepskyblue3")
lines(density(c_b[,a]), lwd=2.5, col="darkorchid3", lty=1)
mtext("Posterior Density", side=2, line = 2, cex=1.5, las=0)
mtext("Bias - C", side=1, line = 2.5, cex=1, font=2)}
mtext(paste("Posterior estimates for C - Experiment No.", Exp), font=2, cex=2, side=3)
setwd("C:/Users/Sandra/Desktop/afchavez-019/MichaelLee/SDT Mirror Effect/Data")
rm(list=ls())
dir()
library(R2jags)
#####################
install.packages("rjags")
setwd("C:/Users/Sandra/Desktop/afchavez-019/MichaelLee/SDT Mirror Effect/Data")
rm(list=ls())
dir()
library(R2jags)
###################
setwd("C:/Users/Sandra/Desktop/afchavez-019/MichaelLee/SDT Mirror Effect/Data")
rm(list=ls())
dir()
library(R2jags)
############
